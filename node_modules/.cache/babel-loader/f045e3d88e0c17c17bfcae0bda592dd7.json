{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/components/ViewInterface/ViewInterface.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport AuthorSelector from './AuthorSelector';\nimport { setVideoID, getViewRiffs } from '../../actions';\nimport NavBar from '../NavBar.js';\n\nconst queryString = require('query-string');\n\nclass ViewInterface extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.componentDidMount = () => {\n      this.props.setVideoID(this.props.match.params.videoID);\n      this.props.getViewRiffs(this.props.match.params.videoID);\n    };\n\n    this.render = () => {\n      const parsed = queryString.parse(this.props.location.search);\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(NavBar, {\n        color: \"grey\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '4em'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, \"View \", this.props.match.params.videoID), /*#__PURE__*/React.createElement(AuthorSelector, {\n        duration: this.props.duration,\n        history: this.props.history,\n        videoID: this.props.match.params.videoID,\n        riffers: parsed.solo,\n        riffs: this.props.riffs,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }\n      })));\n    };\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  riffs: state.riffs.all,\n  duration: state.duration\n});\n\nconst mapDispatchToProps = {\n  setVideoID,\n  getViewRiffs\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewInterface);","map":{"version":3,"names":["React","connect","AuthorSelector","setVideoID","getViewRiffs","NavBar","queryString","require","ViewInterface","Component","componentDidMount","props","match","params","videoID","render","parsed","parse","location","search","marginTop","duration","history","solo","riffs","mapStateToProps","state","all","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/components/ViewInterface/ViewInterface.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport AuthorSelector from './AuthorSelector';\nimport { setVideoID, getViewRiffs } from '../../actions';\nimport NavBar from '../NavBar.js';\n\nconst queryString = require('query-string');\n\nclass ViewInterface extends React.Component {\n  componentDidMount = () => {\n    this.props.setVideoID(this.props.match.params.videoID);\n\n    this.props.getViewRiffs(this.props.match.params.videoID);\n  };\n\n  render = () => {\n    const parsed = queryString.parse(this.props.location.search);\n\n    return (\n      <React.Fragment>\n        <NavBar color=\"grey\" />\n        <div style={{ marginTop: '4em' }}>\n          <h1>View {this.props.match.params.videoID}</h1>\n          <AuthorSelector\n            duration={this.props.duration}\n            history={this.props.history}\n            videoID={this.props.match.params.videoID}\n            riffers={parsed.solo}\n            riffs={this.props.riffs}\n          />\n        </div>\n      </React.Fragment>\n    );\n  };\n}\n\nconst mapStateToProps = (state) => ({\n  riffs: state.riffs.all,\n  duration: state.duration,\n});\n\nconst mapDispatchToProps = {\n  setVideoID,\n  getViewRiffs,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewInterface);\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,eAAzC;AACA,OAAOC,MAAP,MAAmB,cAAnB;;AAEA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAMC,aAAN,SAA4BR,KAAK,CAACS,SAAlC,CAA4C;EAAA;IAAA;;IAAA,KAC1CC,iBAD0C,GACtB,MAAM;MACxB,KAAKC,KAAL,CAAWR,UAAX,CAAsB,KAAKQ,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAA9C;MAEA,KAAKH,KAAL,CAAWP,YAAX,CAAwB,KAAKO,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAhD;IACD,CALyC;;IAAA,KAO1CC,MAP0C,GAOjC,MAAM;MACb,MAAMC,MAAM,GAAGV,WAAW,CAACW,KAAZ,CAAkB,KAAKN,KAAL,CAAWO,QAAX,CAAoBC,MAAtC,CAAf;MAEA,oBACE,oBAAC,KAAD,CAAO,QAAP;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE,oBAAC,MAAD;QAAQ,KAAK,EAAC,MAAd;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF,eAEE;QAAK,KAAK,EAAE;UAAEC,SAAS,EAAE;QAAb,CAAZ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,gBACE;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,YAAU,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAAlC,CADF,eAEE,oBAAC,cAAD;QACE,QAAQ,EAAE,KAAKH,KAAL,CAAWU,QADvB;QAEE,OAAO,EAAE,KAAKV,KAAL,CAAWW,OAFtB;QAGE,OAAO,EAAE,KAAKX,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,OAHnC;QAIE,OAAO,EAAEE,MAAM,CAACO,IAJlB;QAKE,KAAK,EAAE,KAAKZ,KAAL,CAAWa,KALpB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFF,CAFF,CADF;IAeD,CAzByC;EAAA;;AAAA;;AA4B5C,MAAMC,eAAe,GAAIC,KAAD,KAAY;EAClCF,KAAK,EAAEE,KAAK,CAACF,KAAN,CAAYG,GADe;EAElCN,QAAQ,EAAEK,KAAK,CAACL;AAFkB,CAAZ,CAAxB;;AAKA,MAAMO,kBAAkB,GAAG;EACzBzB,UADyB;EAEzBC;AAFyB,CAA3B;AAKA,eAAeH,OAAO,CAACwB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CpB,aAA7C,CAAf"},"metadata":{},"sourceType":"module"}