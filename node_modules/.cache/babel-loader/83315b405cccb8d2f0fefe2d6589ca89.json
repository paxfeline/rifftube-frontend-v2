{"ast":null,"code":"import { RECEIVE_RIFF_LIST, RECEIVE_NAME_UPDATE, LOAD_USER_DATA } from '../actions/index.js';\n\nconst nameReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RECEIVE_NAME_UPDATE:\n    case RECEIVE_RIFF_LIST:\n    case LOAD_USER_DATA:\n      return action.payload.name || state;\n    // hacky but added because no name is returned for view riffs\n\n    default:\n      return state;\n  }\n};\n\nexport default nameReducer;","map":{"version":3,"names":["RECEIVE_RIFF_LIST","RECEIVE_NAME_UPDATE","LOAD_USER_DATA","nameReducer","state","action","type","payload","name"],"sources":["/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/reducers/name-reducer.js"],"sourcesContent":["import { RECEIVE_RIFF_LIST, RECEIVE_NAME_UPDATE, LOAD_USER_DATA } from '../actions/index.js';\n\nconst nameReducer = (state = '', action) => {\n  switch (action.type) {\n    case RECEIVE_NAME_UPDATE:\n    case RECEIVE_RIFF_LIST:\n    case LOAD_USER_DATA:\n      return action.payload.name || state; // hacky but added because no name is returned for view riffs\n    default:\n      return state;\n  }\n};\n\nexport default nameReducer;\n"],"mappings":"AAAA,SAASA,iBAAT,EAA4BC,mBAA5B,EAAiDC,cAAjD,QAAuE,qBAAvE;;AAEA,MAAMC,WAAW,GAAG,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EAC1C,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKL,mBAAL;IACA,KAAKD,iBAAL;IACA,KAAKE,cAAL;MACE,OAAOG,MAAM,CAACE,OAAP,CAAeC,IAAf,IAAuBJ,KAA9B;IAAqC;;IACvC;MACE,OAAOA,KAAP;EANJ;AAQD,CATD;;AAWA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}