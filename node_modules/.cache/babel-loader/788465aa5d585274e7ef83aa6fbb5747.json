{"ast":null,"code":"import { SET_VIDEO_ID, SET_RIFF_NOT_PLAYING, SET_RIFF_PLAYING } from '../actions/index.js';\n\nconst riffsPlayingReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return {};\n\n    case SET_RIFF_PLAYING:\n    case SET_RIFF_NOT_PLAYING:\n      return { ...state,\n        [action.payload]: action.type === SET_RIFF_PLAYING ? true : false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default riffsPlayingReducer;","map":{"version":3,"names":["SET_VIDEO_ID","SET_RIFF_NOT_PLAYING","SET_RIFF_PLAYING","riffsPlayingReducer","state","action","type","payload"],"sources":["/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/reducers/riffsPlaying-reducer.js"],"sourcesContent":["import {\n  SET_VIDEO_ID,\n  SET_RIFF_NOT_PLAYING,\n  SET_RIFF_PLAYING,\n} from '../actions/index.js';\n\nconst riffsPlayingReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return {};\n    case SET_RIFF_PLAYING:\n    case SET_RIFF_NOT_PLAYING:\n      return {\n        ...state,\n        [action.payload]: action.type === SET_RIFF_PLAYING ? true : false,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default riffsPlayingReducer;\n"],"mappings":"AAAA,SACEA,YADF,EAEEC,oBAFF,EAGEC,gBAHF,QAIO,qBAJP;;AAMA,MAAMC,mBAAmB,GAAG,YAAwB;EAAA,IAAvBC,KAAuB,uEAAf,EAAe;EAAA,IAAXC,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKN,YAAL;MACE,OAAO,EAAP;;IACF,KAAKE,gBAAL;IACA,KAAKD,oBAAL;MACE,OAAO,EACL,GAAGG,KADE;QAEL,CAACC,MAAM,CAACE,OAAR,GAAkBF,MAAM,CAACC,IAAP,KAAgBJ,gBAAhB,GAAmC,IAAnC,GAA0C;MAFvD,CAAP;;IAIF;MACE,OAAOE,KAAP;EAVJ;AAYD,CAbD;;AAeA,eAAeD,mBAAf"},"metadata":{},"sourceType":"module"}