{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/components/RiffControls/EditControls.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GoogleLogout } from 'react-google-login';\nimport RiffList from './RiffList.js';\nimport EditRiff from './EditRiff.js';\nimport RiffButton from './RiffButton.js';\nimport { setRifferName, googleUserLogout } from '../../actions'; // this and below are the same file\n\nimport { EDIT_MODE, EDIT_NEW_MODE } from '../../actions';\nimport { createTempRiff, togglePlayerMode, setRecorder } from '../../actions/index.js';\n/*This component houses all of the riff buttons and the rifflist*/\n\nfunction EditControls(props) {\n  useEffect(() => {\n    const blurEvent = () => {\n      setTimeout(() => {\n        document.activeElement.blur();\n      }, 100);\n    };\n\n    window.addEventListener('blur', blurEvent);\n\n    const keydownEvent = e => {\n      console.log(props.mode);\n      if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);else if (e.key === 't') props.createTempRiff('text', props.videoID);else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left') // I actually took MS specific BS into account\n        window.rifftubePlayer.seekTo(Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0), true);else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right') window.rifftubePlayer.seekTo(Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration), true);else if (e.key === ' ' || e.key === 'k') {\n        props.togglePlayerMode();\n        e.preventDefault();\n      }\n    };\n\n    window.addEventListener('keydown', keydownEvent);\n    return () => {\n      window.removeEventListener('blur', blurEvent);\n      window.removeEventListener('keydown', keydownEvent);\n    };\n  }, [props]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"control-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, // make this into a component?:\n  props.name ? /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"riffer-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \"Riffer Name:\\xA0\", props.name), /*#__PURE__*/React.createElement(GoogleLogout, {\n    clientId: \"941154439836-s6iglcrdckcj6od74kssqsom58j96hd8.apps.googleusercontent.com\",\n    buttonText: \"Logout\",\n    onLogoutSuccess: () => props.googleUserLogout(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"add-riff-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Add New Riff\"), props.recorder !== null ? /*#__PURE__*/React.createElement(RiffButton, {\n    type: \"audio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }) : /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      var AudioContext = window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n\n      var audioContext = new AudioContext();\n\n      if (navigator.mediaDevices) {\n        navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: false\n        }).then(stream => {\n          // gum (get user media)\n          var input = audioContext.createMediaStreamSource(stream);\n          var recorder = new window.WebAudioRecorder(input, {\n            workerDir: '/lib/',\n            encoding: 'mp3',\n            onEncoderLoading: (recorder, encoding) => {\n              // show \"loading encoder...\" display\n              console.log('Loading ' + encoding + ' encoder...');\n            },\n            onEncoderLoaded: (recorder, encoding) => {\n              // hide \"loading encoder...\" display\n              console.log(encoding + ' encoder loaded');\n            }\n          });\n          props.setRecorder(recorder);\n        }).catch(function (err) {\n          //enable the record button if getUSerMedia() fails\n          console.log(\"oops, can't get stream\", err);\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Click to allow recording\"), /*#__PURE__*/React.createElement(RiffButton, {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }), props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE ? /*#__PURE__*/React.createElement(EditRiff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }) : null), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"riff-list-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, \"Control Panel\"), /*#__PURE__*/React.createElement(RiffList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }));\n}\n\nlet mapStateToProps = state => ({\n  mode: state.mode,\n  name: state.name,\n  googleUser: state.googleUser,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder\n});\n\nconst mapDispatchToProps = {\n  setRifferName,\n  googleUserLogout,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);","map":{"version":3,"names":["React","useEffect","connect","GoogleLogout","RiffList","EditRiff","RiffButton","setRifferName","googleUserLogout","EDIT_MODE","EDIT_NEW_MODE","createTempRiff","togglePlayerMode","setRecorder","EditControls","props","blurEvent","setTimeout","document","activeElement","blur","window","addEventListener","keydownEvent","e","console","log","mode","key","videoID","rifftubePlayer","seekTo","Math","max","getCurrentTime","min","duration","preventDefault","removeEventListener","name","recorder","AudioContext","webkitAudioContext","audioContext","navigator","mediaDevices","getUserMedia","audio","video","then","stream","input","createMediaStreamSource","WebAudioRecorder","workerDir","encoding","onEncoderLoading","onEncoderLoaded","catch","err","mapStateToProps","state","googleUser","mapDispatchToProps"],"sources":["/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/components/RiffControls/EditControls.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { GoogleLogout } from 'react-google-login';\n\nimport RiffList from './RiffList.js';\nimport EditRiff from './EditRiff.js';\nimport RiffButton from './RiffButton.js';\nimport { setRifferName, googleUserLogout } from '../../actions'; // this and below are the same file\nimport { EDIT_MODE, EDIT_NEW_MODE } from '../../actions';\n\nimport { createTempRiff, togglePlayerMode, setRecorder } from '../../actions/index.js';\n\n/*This component houses all of the riff buttons and the rifflist*/\nfunction EditControls(props) {\n  useEffect(() => {\n    const blurEvent = () => {\n      setTimeout(() => {\n        document.activeElement.blur();\n      }, 100);\n    };\n    window.addEventListener('blur', blurEvent);\n    const keydownEvent = (e) => {\n      console.log(props.mode);\n\n      if (e.key === 'r') props.createTempRiff('audio', props.videoID, true);\n      else if (e.key === 't') props.createTempRiff('text', props.videoID);\n      else if (props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE) return;\n      else if (e.key === 'j' || e.key === 'ArrowLeft' || e.key === 'Left')\n        // I actually took MS specific BS into account\n        window.rifftubePlayer.seekTo(\n          Math.max(window.rifftubePlayer.getCurrentTime() - 5, 0),\n          true\n        );\n      else if (e.key === 'l' || e.key === 'ArrowRight' || e.key === 'Right')\n        window.rifftubePlayer.seekTo(\n          Math.min(window.rifftubePlayer.getCurrentTime() + 5, props.duration),\n          true\n        );\n      else if (e.key === ' ' || e.key === 'k') {\n        props.togglePlayerMode();\n        e.preventDefault();\n      }\n    };\n    window.addEventListener('keydown', keydownEvent);\n\n    return () => {\n      window.removeEventListener('blur', blurEvent);\n      window.removeEventListener('keydown', keydownEvent);\n    };\n  }, [props]);\n\n  return (\n    <div className=\"control-panel\">\n      {\n        // make this into a component?:\n        props.name ? (\n          <React.Fragment>\n            <div className=\"riffer-name\">\n              Riffer Name:&nbsp;\n              {props.name}\n            </div>\n            <GoogleLogout\n              clientId=\"941154439836-s6iglcrdckcj6od74kssqsom58j96hd8.apps.googleusercontent.com\"\n              buttonText=\"Logout\"\n              onLogoutSuccess={() => props.googleUserLogout()}\n            ></GoogleLogout>\n          </React.Fragment>\n        ) : null\n      }\n\n      {/* to add back later <Collaboration /> */}\n\n      <div>\n        <h2 className=\"add-riff-title\">Add New Riff</h2>\n        {\n          props.recorder !== null ?\n            <RiffButton type=\"audio\" />\n          :\n            <button onClick={() => {\n              var AudioContext =\n                window.AudioContext || window.webkitAudioContext; // Default // Safari and old versions of Chrome\n              var audioContext = new AudioContext();\n              if (navigator.mediaDevices) {\n                navigator.mediaDevices\n                  .getUserMedia({ audio: true, video: false })\n                  .then((stream) => {\n                    // gum (get user media)\n                    var input = audioContext.createMediaStreamSource(stream);\n                \n                    var recorder = new window.WebAudioRecorder(input, {\n                      workerDir: '/lib/',\n                      encoding: 'mp3',\n                      onEncoderLoading: (recorder, encoding) => {\n                        // show \"loading encoder...\" display\n                        console.log('Loading ' + encoding + ' encoder...');\n                      },\n                      onEncoderLoaded: (recorder, encoding) => {\n                        // hide \"loading encoder...\" display\n                        console.log(encoding + ' encoder loaded');\n                      },\n                    });\n                    props.setRecorder(recorder);\n                  })\n                  .catch(function (err) {\n                    //enable the record button if getUSerMedia() fails\n                    console.log(\"oops, can't get stream\", err);\n                  });\n              }\n            }}>\n              Click to allow recording\n            </button>\n        }\n        <RiffButton type=\"text\" />\n\n        {props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE ? (\n          <EditRiff />\n        ) : null}\n      </div>\n      <h2 className=\"riff-list-title\">Control Panel</h2>\n      <RiffList />\n    </div>\n  );\n}\n\nlet mapStateToProps = (state) => ({\n  mode: state.mode,\n  name: state.name,\n  googleUser: state.googleUser,\n  videoID: state.videoID,\n  duration: state.duration,\n  recorder: state.recorder,\n});\n\nconst mapDispatchToProps = {\n  setRifferName,\n  googleUserLogout,\n  createTempRiff,\n  togglePlayerMode,\n  setRecorder,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}