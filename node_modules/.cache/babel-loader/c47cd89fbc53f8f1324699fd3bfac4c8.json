{"ast":null,"code":"var _jsxFileName = \"/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/components/MetaBar.js\";\nimport React, { createRef } from 'react';\n\nconst MetaBar = _ref => {\n  let {\n    riffsMeta,\n    riffs,\n    duration\n  } = _ref;\n  window.metaPlayHead = createRef();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-riff-meta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"meta-play-head\",\n    ref: window.metaPlayHead,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }), riffsMeta && duration && riffs && riffsMeta.filter(el => !riffs.find(t => el.id === t.id)).map(riff => /*#__PURE__*/React.createElement(\"div\", {\n    key: riff.id,\n    className: \"riff-meta\",\n    style: {\n      left: riff.time / duration * 100 + '%',\n      width: riff.duration / duration * 100 + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  })), riffs && riffs.map(riff => /*#__PURE__*/React.createElement(\"div\", {\n    key: riff.id,\n    className: \"riff-own-meta\",\n    style: {\n      left: riff.time / duration * 100 + '%',\n      width: riff.duration / duration * 100 + '%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default MetaBar;","map":{"version":3,"names":["React","createRef","MetaBar","riffsMeta","riffs","duration","window","metaPlayHead","filter","el","find","t","id","map","riff","left","time","width"],"sources":["/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/components/MetaBar.js"],"sourcesContent":["import React, { createRef } from 'react';\n\nconst MetaBar = ({ riffsMeta, riffs, duration }) => {\n  window.metaPlayHead = createRef();\n  return (\n    <div className=\"container-riff-meta\">\n      <div id=\"meta-play-head\" ref={window.metaPlayHead} />\n      {riffsMeta &&\n        duration &&\n        riffs &&\n        riffsMeta\n          .filter((el) => !riffs.find((t) => el.id === t.id))\n          .map((riff) => (\n            <div\n              key={riff.id}\n              className=\"riff-meta\"\n              style={{\n                left: (riff.time / duration) * 100 + '%',\n                width: (riff.duration / duration) * 100 + '%',\n              }}\n            />\n          ))}\n      {riffs &&\n        riffs.map((riff) => (\n          <div\n            key={riff.id}\n            className=\"riff-own-meta\"\n            style={{\n              left: (riff.time / duration) * 100 + '%',\n              width: (riff.duration / duration) * 100 + '%',\n            }}\n          ></div>\n        ))}\n    </div>\n  );\n};\n\nexport default MetaBar;\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAO,GAAG,QAAoC;EAAA,IAAnC;IAAEC,SAAF;IAAaC,KAAb;IAAoBC;EAApB,CAAmC;EAClDC,MAAM,CAACC,YAAP,GAAsBN,SAAS,EAA/B;EACA,oBACE;IAAK,SAAS,EAAC,qBAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAK,EAAE,EAAC,gBAAR;IAAyB,GAAG,EAAEK,MAAM,CAACC,YAArC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,EAEGJ,SAAS,IACRE,QADD,IAECD,KAFD,IAGCD,SAAS,CACNK,MADH,CACWC,EAAD,IAAQ,CAACL,KAAK,CAACM,IAAN,CAAYC,CAAD,IAAOF,EAAE,CAACG,EAAH,KAAUD,CAAC,CAACC,EAA9B,CADnB,EAEGC,GAFH,CAEQC,IAAD,iBACH;IACE,GAAG,EAAEA,IAAI,CAACF,EADZ;IAEE,SAAS,EAAC,WAFZ;IAGE,KAAK,EAAE;MACLG,IAAI,EAAGD,IAAI,CAACE,IAAL,GAAYX,QAAb,GAAyB,GAAzB,GAA+B,GADhC;MAELY,KAAK,EAAGH,IAAI,CAACT,QAAL,GAAgBA,QAAjB,GAA6B,GAA7B,GAAmC;IAFrC,CAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHJ,CALJ,EAiBGD,KAAK,IACJA,KAAK,CAACS,GAAN,CAAWC,IAAD,iBACR;IACE,GAAG,EAAEA,IAAI,CAACF,EADZ;IAEE,SAAS,EAAC,eAFZ;IAGE,KAAK,EAAE;MACLG,IAAI,EAAGD,IAAI,CAACE,IAAL,GAAYX,QAAb,GAAyB,GAAzB,GAA+B,GADhC;MAELY,KAAK,EAAGH,IAAI,CAACT,QAAL,GAAgBA,QAAjB,GAA6B,GAA7B,GAAmC;IAFrC,CAHT;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADF,CAlBJ,CADF;AA+BD,CAjCD;;AAmCA,eAAeH,OAAf"},"metadata":{},"sourceType":"module"}