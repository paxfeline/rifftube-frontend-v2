{"ast":null,"code":"import axios from 'axios';\nexport const GOOGLE_USER_SIGNIN = 'GOOGLE_USER_SIGNIN';\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\nexport const EDIT_RIFF = 'EDIT_RIFF';\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_RIFF = 'SAVE_RIFF';\nexport const SAVE_RIFF_SUCCESS = 'SAVE_RIFF_SUCCESS';\nexport const SAVE_RIFF_FAILURE = 'SAVE_RIFF_FAILURE';\nexport const UPDATE_RIFF_TIME_SUCCESS = 'UPDATE_RIFF_TIME_SUCCESS';\nexport const DELETE_RIFF = 'DELETE_RIFF';\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\nexport const RECEIVE_RIFF_META = 'RECEIVE_RIFF_META';\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\nexport const SET_VIEW_USERID_MUTED = 'SET_VIEW_USERID_MUTED';\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\nexport const SET_VIDEO_DURATION = 'SET_VIDEO_DURATION';\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_PUBLIC_USER_DATA = 'LOAD_PUBLIC_USER_DATA';\nexport const LOAD_PUBLIC_USER_NAME = 'LOAD_PUBLIC_USER_NAME';\nexport const LOAD_GLOBAL_VIDEO_LIST = 'LOAD_GLOBAL_VIDEO_LIST';\nexport const SET_IMMEDIATE_OFF = 'SET_IMMEDIATE_OFF';\nexport const SET_IMMEDIATE_ON = 'SET_IMMEDIATE_ON';\nexport const SET_RECORDER = 'SET_RECORDER';\nexport const WEB_SOCKET_UPDATE = 'WEB_SOCKET_UPDATE';\nexport const SAVE_PIC_SUCCESS = 'SAVE_PIC_SUCCESS';\nexport const SAVE_PIC_FAILURE = 'SAVE_PIC_FAILURE';\n/******** WebSockets */\n\nexport const setWebSocket = payload => ({\n  type: WEB_SOCKET_UPDATE,\n  payload\n});\n/******** Editing Interface */\n\nexport const setVideoDuration = payload => ({\n  type: SET_VIDEO_DURATION,\n  payload\n});\nexport const setRifferName = (newName, googleUser) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/set-name`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n        newName\n      }\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_NAME_UPDATE,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setRiffPic = (payload, googleUser) => {\n  return dispatch => {\n    let fd = new FormData();\n    fd.append('token', googleUser.getAuthResponse().id_token);\n    fd.append('image', payload);\n    axios({\n      method: 'post',\n      url: `/save-pic`,\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: SAVE_PIC_SUCCESS,\n        payload: res.data\n      }); // fix these to constants\n    }).catch(err => {\n      dispatch({\n        type: SAVE_PIC_FAILURE,\n        payload: err.response\n      });\n    });\n  };\n};\nexport const getRiffs = (videoID, googleUser) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/get-riffs`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n        videoID\n      }\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setVideoID = (videoID, googleUser) => {\n  return dispatch => {\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID\n    });\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(error => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: {\n          body: []\n        }\n      });\n    });\n\n    if (googleUser && googleUser.getAuthResponse) {\n      axios({\n        method: 'post',\n        url: `/get-riffs`,\n        data: {\n          token: googleUser.getAuthResponse().id_token,\n          videoID\n        }\n      }).then(res => {\n        dispatch({\n          type: RECEIVE_RIFF_LIST,\n          payload: res.data\n        });\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n}; //Delete Riff\n\nexport const deleteRiff = (riffID, googleUser, video_id, websocket) => {\n  return dispatch => {\n    axios({\n      method: 'delete',\n      url: `/riff-remove/${riffID}`,\n      data: {\n        token: googleUser.getAuthResponse().id_token\n      }\n    }).then(res => {\n      dispatch({\n        type: DELETE_RIFF,\n        id: riffID\n      }); // websocket call\n\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id\n      }));\n    }).catch(err => console.log(\"error\", err));\n  };\n}; // perhaps this action should somehow call the above action (setVideoID)?\n// this shit really needs to be decoupled\n\nexport const setGoogleUser = googleUser => {\n  return dispatch => {\n    dispatch({\n      type: GOOGLE_USER_SIGNIN,\n      payload: googleUser\n    });\n  };\n}; // perhaps this action should somehow call the above action (setVideoID)?\n\nexport const googleUserLogout = () => ({\n  type: GOOGLE_USER_SIGNIN,\n  payload: null\n});\nexport const getRiffsMeta = videoID => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_META,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getViewRiffs = videoID => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`\n    }).then(res => {\n      dispatch({\n        type: RECEIVE_RIFF_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getUserData = googleUser => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-user-data/${googleUser.getAuthResponse().id_token}`\n    }).then(res => {\n      dispatch({\n        type: LOAD_USER_DATA,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getPublicUserData = id => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: `/get-user-data-by-id/${id}`\n    }).then(res => {\n      dispatch({\n        type: LOAD_PUBLIC_USER_DATA,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const getGlobalVideoList = () => {\n  return dispatch => {\n    axios({\n      method: 'get',\n      url: '/get-global-video-list'\n    }).then(res => {\n      dispatch({\n        type: LOAD_GLOBAL_VIDEO_LIST,\n        payload: res.data\n      });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\nexport const setPlayerMode = mode => ({\n  type: SET_PLAYER_MODE,\n  payload: mode\n});\nexport const togglePlayerMode = mode => ({\n  type: TOGGLE_PLAYER_MODE\n});\n/*export const saveRiff = payload => ({\n  type: SAVE_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration\n});\nexport const editRiff = (payload, id, load) => {\n  return dispatch => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload,\n      // index\n      id\n    }); // id is only passed when the audio riff needs loading\n\n    if (load) rawLoadAxios(dispatch, id); // loads riff audio\n  };\n};\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT\n});\nexport const updateRiffTime = (token, start_time, video_id, riff_id, websocket) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/update-riff-time`,\n      data: {\n        token,\n        start_time,\n        id: riff_id\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: UPDATE_RIFF_TIME_SUCCESS,\n        id: riff_id,\n        time: start_time\n      }); // websocket call\n\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id: video_id\n      }));\n    }).catch(err => {\n      dispatch({\n        type: SAVE_RIFF_FAILURE,\n        payload: err.response\n      });\n    }); // dispatch NOTHING\n  };\n};\nexport const saveRiff = (token, payload, riff, websocket) => {\n  return dispatch => {\n    let fd = new FormData();\n    fd.append('token', token);\n    fd.append(riff.type === 'text' ? 'text' : 'blob', payload.payload);\n    fd.append('type', riff.type);\n    fd.append('duration', riff.type === 'text' ? payload.duration : riff.duration // how can this be right? (I should just relax)\n    );\n    fd.append('start_time', payload.time);\n    fd.append('video_id', riff.video_id);\n    fd.append('tempId', riff.tempId); // this may be null, and that's ok\n\n    fd.append('id', riff.id);\n    axios({\n      method: 'post',\n      url: `/save-riff`,\n      data: fd,\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      // res.data.data\n      dispatch({\n        type: SAVE_RIFF_SUCCESS,\n        payload: res.data\n      }); // websocket call\n\n      websocket.send(JSON.stringify({\n        type: 'update',\n        video_id: riff.video_id\n      }));\n    }).catch(err => {\n      dispatch({\n        type: SAVE_RIFF_FAILURE,\n        payload: err.response\n      });\n    }); // dispatch local save command (clears temp audio)\n\n    dispatch({\n      type: SAVE_RIFF,\n      payload,\n      riff\n    });\n  };\n};\nexport const createTempRiff = function (type, videoID) {\n  let immediateRecord = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  return {\n    type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n    videoID,\n    immediateRecord\n  };\n};\nexport const setImmediateOn = () => ({\n  type: SET_IMMEDIATE_ON\n});\nexport const setImmediateOff = () => ({\n  type: SET_IMMEDIATE_OFF\n});\nexport const setRecorder = payload => ({\n  type: SET_RECORDER,\n  payload\n});\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index\n});\nexport const loadRiff = (id, load) => {\n  return dispatch => {\n    dispatch({\n      type: LOAD_RIFF,\n      payload: id\n    });\n    rawLoadAxios(dispatch, id);\n  };\n};\n\nconst rawLoadAxios = (dispatch, id) => {\n  axios({\n    method: 'get',\n    url: `/load-riff/${id}`,\n    responseType: 'arraybuffer'\n  }).then(res => {\n    dispatch({\n      type: RIFF_LOADED,\n      payload: res.data,\n      id\n    });\n  }).catch(err => console.log(\"error\", err));\n};","map":{"version":3,"names":["axios","GOOGLE_USER_SIGNIN","CREATE_TEMP_AUDIO_RIFF","CREATE_TEMP_TEXT_RIFF","EDIT_RIFF","CANCEL_EDIT","SAVE_RIFF","SAVE_RIFF_SUCCESS","SAVE_RIFF_FAILURE","UPDATE_RIFF_TIME_SUCCESS","DELETE_RIFF","SAVE_TEMP_AUDIO","SET_RIFF_PLAYING","SET_RIFF_NOT_PLAYING","LOAD_RIFF","RIFF_LOADED","SET_PLAYER_MODE","EDIT_MODE","EDIT_NEW_MODE","PLAY_MODE","PAUSE_MODE","TOGGLE_PLAYER_MODE","SET_VIDEO_ID","RECEIVE_NAME_UPDATE","RECEIVE_RIFF_LIST","RECEIVE_RIFF_META","TOGGLE_VIEW_USERID_MUTED","SET_VIEW_USERID_MUTED","RECEIVE_COLLABORATION_ID","CREATE_PLAYLIST_SUCCESS","CREATE_PLAYLIST_FAILURE","SET_VIDEO_DURATION","LOAD_USER_DATA","LOAD_PUBLIC_USER_DATA","LOAD_PUBLIC_USER_NAME","LOAD_GLOBAL_VIDEO_LIST","SET_IMMEDIATE_OFF","SET_IMMEDIATE_ON","SET_RECORDER","WEB_SOCKET_UPDATE","SAVE_PIC_SUCCESS","SAVE_PIC_FAILURE","setWebSocket","payload","type","setVideoDuration","setRifferName","newName","googleUser","dispatch","method","url","data","token","getAuthResponse","id_token","then","res","catch","err","console","log","setRiffPic","fd","FormData","append","headers","response","getRiffs","videoID","setVideoID","error","body","deleteRiff","riffID","video_id","websocket","id","send","JSON","stringify","setGoogleUser","googleUserLogout","getRiffsMeta","getViewRiffs","getUserData","getPublicUserData","getGlobalVideoList","setPlayerMode","mode","togglePlayerMode","saveTempAudio","duration","editRiff","load","rawLoadAxios","cancelEdit","updateRiffTime","start_time","riff_id","time","saveRiff","riff","tempId","createTempRiff","immediateRecord","setImmediateOn","setImmediateOff","setRecorder","setRiffPlaying","index","playing","loadRiff","responseType"],"sources":["/Users/davidnewberry/Documents/rifftube-git/RiffTube/front-end/src/actions/index.js"],"sourcesContent":["import axios from 'axios';\n\nexport const GOOGLE_USER_SIGNIN = 'GOOGLE_USER_SIGNIN';\n\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\n\nexport const EDIT_RIFF = 'EDIT_RIFF';\n\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_RIFF = 'SAVE_RIFF';\n\nexport const SAVE_RIFF_SUCCESS = 'SAVE_RIFF_SUCCESS';\nexport const SAVE_RIFF_FAILURE = 'SAVE_RIFF_FAILURE';\n\nexport const UPDATE_RIFF_TIME_SUCCESS = 'UPDATE_RIFF_TIME_SUCCESS';\n\nexport const DELETE_RIFF = 'DELETE_RIFF';\n\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\n\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\n\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\n\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\n\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\n\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\nexport const RECEIVE_RIFF_META = 'RECEIVE_RIFF_META';\n\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\nexport const SET_VIEW_USERID_MUTED = 'SET_VIEW_USERID_MUTED';\n\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\n\nexport const SET_VIDEO_DURATION = 'SET_VIDEO_DURATION';\n\nexport const LOAD_USER_DATA = 'LOAD_USER_DATA';\nexport const LOAD_PUBLIC_USER_DATA = 'LOAD_PUBLIC_USER_DATA';\nexport const LOAD_PUBLIC_USER_NAME = 'LOAD_PUBLIC_USER_NAME';\nexport const LOAD_GLOBAL_VIDEO_LIST = 'LOAD_GLOBAL_VIDEO_LIST';\n\nexport const SET_IMMEDIATE_OFF = 'SET_IMMEDIATE_OFF';\nexport const SET_IMMEDIATE_ON = 'SET_IMMEDIATE_ON';\n\nexport const SET_RECORDER = 'SET_RECORDER';\n\nexport const WEB_SOCKET_UPDATE = 'WEB_SOCKET_UPDATE';\n\nexport const SAVE_PIC_SUCCESS = 'SAVE_PIC_SUCCESS';\nexport const SAVE_PIC_FAILURE = 'SAVE_PIC_FAILURE';\n\n/******** WebSockets */\n\nexport const setWebSocket = (payload) => ({\n  type: WEB_SOCKET_UPDATE,\n  payload,\n});\n\n/******** Editing Interface */\n\nexport const setVideoDuration = (payload) => ({\n  type: SET_VIDEO_DURATION,\n  payload,\n});\n\nexport const setRifferName = (newName, googleUser) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/set-name`,\n      data: { token: googleUser.getAuthResponse().id_token, newName },\n    }).then((res) => {\n      dispatch({ type: RECEIVE_NAME_UPDATE, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const setRiffPic = (payload, googleUser) => {\n  return (dispatch) => {\n    let fd = new FormData();\n    fd.append('token', googleUser.getAuthResponse().id_token);\n    fd.append('image', payload);\n    axios({\n      method: 'post',\n      url: `/save-pic`,\n      data: fd,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: SAVE_PIC_SUCCESS, payload: res.data }); // fix these to constants\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_PIC_FAILURE, payload: err.response });\n      });\n  };\n};\n\nexport const getRiffs = (videoID, googleUser) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/get-riffs`,\n      data: { token: googleUser.getAuthResponse().id_token, videoID },\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  }\n};\n\nexport const setVideoID = (videoID, googleUser) => {\n  return (dispatch) => {\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID,\n    });\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(error => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: { body: [] } });\n    });\n    if (googleUser && googleUser.getAuthResponse) {\n      axios({\n        method: 'post',\n        url: `/get-riffs`,\n        data: { token: googleUser.getAuthResponse().id_token, videoID },\n      }).then((res) => {\n        dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n      }).catch(error => {\n        console.error(error);\n      });\n    }\n  };\n};\n\n//Delete Riff\nexport const deleteRiff = (riffID, googleUser, video_id, websocket) => {\n  return (dispatch) => {\n    axios({\n      method: 'delete',\n      url: `/riff-remove/${riffID}`,\n      data: {\n        token: googleUser.getAuthResponse().id_token,\n      },\n    }).then((res) => {\n      dispatch({ type: DELETE_RIFF, id: riffID });\n\n      // websocket call\n      websocket.send(JSON.stringify({ type: 'update', video_id }));\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\n\n// this shit really needs to be decoupled\nexport const setGoogleUser = (googleUser) => {\n  return (dispatch) => {\n    dispatch({\n      type: GOOGLE_USER_SIGNIN,\n      payload: googleUser,\n    });\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\nexport const googleUserLogout = () => ({\n  type: GOOGLE_USER_SIGNIN,\n  payload: null,\n});\n\nexport const getRiffsMeta = (videoID) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getViewRiffs = (videoID) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-view-riffs/${videoID}`,\n    }).then((res) => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getUserData = (googleUser) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-user-data/${googleUser.getAuthResponse().id_token}`,\n    }).then((res) => {\n      dispatch({ type: LOAD_USER_DATA, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getPublicUserData = (id) => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: `/get-user-data-by-id/${id}`,\n    }).then((res) => {\n      dispatch({ type: LOAD_PUBLIC_USER_DATA, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const getGlobalVideoList = () => {\n  return (dispatch) => {\n    axios({\n      method: 'get',\n      url: '/get-global-video-list',\n    }).then((res) => {\n      dispatch({ type: LOAD_GLOBAL_VIDEO_LIST, payload: res.data });\n    }).catch(err => console.log(\"error\", err));\n  };\n};\n\nexport const setPlayerMode = (mode) => ({\n  type: SET_PLAYER_MODE,\n  payload: mode,\n});\n\nexport const togglePlayerMode = (mode) => ({\n  type: TOGGLE_PLAYER_MODE,\n});\n\n/*export const saveRiff = payload => ({\n  type: SAVE_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration,\n});\n\nexport const editRiff = (payload, id, load) => {\n  return (dispatch) => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload, // index\n      id,\n    });\n\n    // id is only passed when the audio riff needs loading\n    if (load) rawLoadAxios(dispatch, id); // loads riff audio\n  };\n};\n\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT,\n});\n\nexport const updateRiffTime = (token, start_time, video_id, riff_id, websocket) => {\n  return (dispatch) => {\n    axios({\n      method: 'post',\n      url: `/update-riff-time`,\n      data: { token, start_time, id: riff_id },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: UPDATE_RIFF_TIME_SUCCESS, id: riff_id, time: start_time });\n        // websocket call\n        websocket.send(\n          JSON.stringify({ type: 'update', video_id: video_id })\n        );\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_RIFF_FAILURE, payload: err.response });\n      });\n\n    // dispatch NOTHING\n  };\n}\n\nexport const saveRiff = (token, payload, riff, websocket) => {\n  return (dispatch) => {\n    let fd = new FormData();\n    fd.append('token', token);\n    fd.append(riff.type === 'text' ? 'text' : 'blob', payload.payload);\n    fd.append('type', riff.type);\n    fd.append(\n      'duration',\n      riff.type === 'text' ? payload.duration : riff.duration // how can this be right? (I should just relax)\n    );\n    fd.append('start_time', payload.time);\n    fd.append('video_id', riff.video_id);\n    fd.append('tempId', riff.tempId);\n\n    // this may be null, and that's ok\n    fd.append('id', riff.id);\n\n    axios({\n      method: 'post',\n      url: `/save-riff`,\n      data: fd,\n      headers: { 'Content-Type': 'multipart/form-data' },\n    })\n      .then((res) => {\n        // res.data.data\n        dispatch({ type: SAVE_RIFF_SUCCESS, payload: res.data });\n        // websocket call\n        websocket.send(\n          JSON.stringify({ type: 'update', video_id: riff.video_id })\n        );\n      })\n      .catch((err) => {\n        dispatch({ type: SAVE_RIFF_FAILURE, payload: err.response });\n      });\n\n    // dispatch local save command (clears temp audio)\n    dispatch({ type: SAVE_RIFF, payload, riff });\n  };\n};\n\nexport const createTempRiff = (type, videoID, immediateRecord = false) => ({\n  type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n  videoID,\n  immediateRecord,\n});\n\nexport const setImmediateOn = () => ({\n  type: SET_IMMEDIATE_ON,\n});\n\nexport const setImmediateOff = () => ({\n  type: SET_IMMEDIATE_OFF,\n});\n\nexport const setRecorder = (payload) => ({\n  type: SET_RECORDER,\n  payload,\n});\n\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index,\n});\n\nexport const loadRiff = (id, load) => {\n  return (dispatch) => {\n    dispatch({ type: LOAD_RIFF, payload: id });\n    rawLoadAxios(dispatch, id);\n  };\n};\n\nconst rawLoadAxios = (dispatch, id) => {\n  axios({\n    method: 'get',\n    url: `/load-riff/${id}`,\n    responseType: 'arraybuffer',\n  }).then((res) => {\n    dispatch({ type: RIFF_LOADED, payload: res.data, id });\n  }).catch(err => console.log(\"error\", err));\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}