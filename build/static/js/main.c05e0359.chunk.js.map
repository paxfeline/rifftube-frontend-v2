{"version":3,"sources":["actions/index.js","components/YouTubeVideo/AllowPlayback.js","components/YouTubeVideo/YouTubeVideo.js","components/Login/Login.js","components/RiffControls/RiffDetail.js","components/RiffControls/RiffList.js","components/RiffControls/Record.js","components/RiffControls/EditRiff.js","components/RiffControls/RiffButton.js","components/RiffControls/EditControls.js","components/MetaBar.js","components/NavBar.js","components/RiffControls/EditInterface.js","components/ViewInterface/ViewFilter.js","components/ViewInterface/AuthorSelector.js","components/ViewInterface/ViewInterface.js","components/LandingPage.js","components/About.js","App.js","serviceWorker.js","reducers/riffs-reducer.js","reducers/riffsMeta-reducer.js","reducers/mode-reducer.js","reducers/googleUser-reducer.js","reducers/riffsPlaying-reducer.js","reducers/name-reducer.js","reducers/userid-reducer.js","reducers/videoID-reducer.js","reducers/videoDuration-reducer.js","reducers/websocket-reducer.js","reducers/index.js","index.js","images/delete-24px.svg","images/edit-24px.svg","images/settings_voice-24px.svg","images/chat-24px.svg","images/undraw_movie_night_93wl.svg","images/undraw_horror_movie_3988.svg"],"names":["PLAY_MODE","setVideoID","videoID","googleUser","dispatch","type","payload","getAuthResponse","axios","method","url","data","token","id_token","then","res","setPlayerMode","mode","rawLoadAxios","id","guser","responseType","AllowPlayback","props","componentDidMount","test","Audio","controls","src","play","console","log","setupAudioPlayers","catch","setState","allowed","window","audioContexts","audioPlayers","audioPlayerUse","audioPlayersCount","i","AudioContext","webkitAudioContext","addEventListener","this","inUse","se","document","createElement","appendChild","srcEl","render","state","className","onClick","React","Component","mapDispatchToProps","connect","YouTubeVideo","YT","Player","loadVideo","tag","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","rifftubePlayer","destroy","player","videoId","height","width","playerVars","playsinline","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","checkForRiffsToLoad","t","riffs","forEach","riff","loading","time","loadRiff","curRiff","riffsPlaying","riffInterval","setInterval","getCurrentTime","metaPlayHead","current","style","left","duration","metaUpdate","index","setRiffPlaying","audLock","setVolume","vol","getVolume","audioURL","URL","createObjectURL","lastRiff","audio","load","clearInterval","componentDidUpdate","prevProps","getPlayerState","playVideo","pauseVideo","Fragment","Object","keys","filter","map","key","playing","togglePlayerMode","Login","socialId","scope","fetchBasicProfile","responseHandler","gus","setGoogleUser","buttonText","editRiff","deleteRiff","riffID","selected","alt","Text","toFixed","Edit","confirm","Delete","all","sort","e1","e2","Record","recorder","gumStream","recordingState","navigator","mediaDevices","getUserMedia","video","stream","err","ret","Date","now","startTime","getAudioTracks","stop","finishRecording","input","createMediaStreamSource","WebAudioRecorder","workerDir","encoding","onEncoderLoading","onEncoderLoaded","onComplete","blob","saveTempAudio","setOptions","timeLimit","encodeAfterRecord","mp3","bitRate","startRecording","EditRiff","durationField","createRef","htmlPayloadField","startTimeField","tempRiff","editIndex","a","source","defaultValue","ref","disabled","saveRiff","Number","value","websocket","cancelEdit","fd","FormData","append","video_id","tempId","headers","send","JSON","stringify","response","temp","RiffButton","createTempRiff","setRifferName","newName","name","n","prompt","MetaBar","riffsMeta","el","find","NavBar","color","to","EditInterface","match","params","videoIDRef","prevState","loggedIn","WebSocket","onmessage","setWebSocket","isSignedIn","authCheck","DefaultComponent","extractVideoID","length","exact","path","onSubmit","e","vID","history","push","preventDefault","href","user_id","target","rel","ViewFilter","selectRiff","newRiff","nonOverlappingRiffs","has","selectedRiffs","Set","newFiltered","otherOverlaps","overlappingRiffs","add","set","delete","r","toDelete","curOverlap","redu","tod","size","values","next","filteredRiffs","selectDiv","offsetLeft","scrollLeft","offsetWidth","tracks","trackPos","runningRiffs","slope","toCheck","candi","includes","splice","indexOf","flag","fontSize","overflow","position","backgroundColor","trackArray","textOverflow","whiteSpace","lineHeight","verticalAlign","AuthorSelector","setMute","mute","m","muted","toggleMute","names","nmStr","join","timestamp","rifferList","riffers","split","arr","some","undefined","riffer","queryString","require","ViewInterface","getViewRiffs","parsed","parse","location","search","marginTop","solo","LandingPage","MovieImage","icon","About","borderRadius","background","margin","HorrorMovie","App","component","Boolean","hostname","initialState","riffsReducer","action","getUTCMilliseconds","body","start_time","isText","text","ind","b","Blob","Array","riffsMetaReducer","modeReducer","googleUserReducer","riffsPlayingReducer","nameReducer","useridReducer","videoIDReducer","videoDurationReducer","webSocketReducer","combineReducers","store","createStore","defaultReducer","applyMiddleware","thunkMiddleware","ReactDOM","getElementById","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c05e0359.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport const GOOGLE_USER_SIGNIN = 'GOOGLE_USER_SIGNIN';\n\nexport const CREATE_TEMP_AUDIO_RIFF = 'CREATE_TEMP_AUDIO_RIFF';\nexport const CREATE_TEMP_TEXT_RIFF = 'CREATE_TEMP_TEXT_RIFF';\n\nexport const EDIT_RIFF = 'EDIT_RIFF';\n\nexport const CANCEL_EDIT = 'CANCEL_EDIT';\nexport const SAVE_RIFF = 'SAVE_RIFF';\n\nexport const SAVE_RIFF_SUCCESS = 'SAVE_RIFF_SUCCESS';\nexport const SAVE_RIFF_FAILURE = 'SAVE_RIFF_FAILURE';\n\nexport const DELETE_RIFF = 'DELETE_RIFF';\n\nexport const SAVE_TEMP_AUDIO = 'SAVE_TEMP_AUDIO';\n\nexport const SET_RIFF_PLAYING = 'SET_RIFF_PLAYING';\nexport const SET_RIFF_NOT_PLAYING = 'SET_RIFF_NOT_PLAYING';\n\nexport const LOAD_RIFF = 'LOAD_RIFF';\nexport const RIFF_LOADED = 'RIFF_LOADED';\n\nexport const SET_PLAYER_MODE = 'SET_PLAYER_MODE';\nexport const EDIT_MODE = 'EDIT_MODE';\nexport const EDIT_NEW_MODE = 'EDIT_NEW_MODE';\nexport const PLAY_MODE = 'PLAY_MODE';\nexport const PAUSE_MODE = 'PAUSE_MODE';\nexport const TOGGLE_PLAYER_MODE = 'TOGGLE_PLAYER_MODE';\n\nexport const SET_VIDEO_ID = 'SET_VIDEO_ID';\nexport const RECEIVE_NAME_UPDATE = 'RECEIVE_NAME_UPDATE';\n\nexport const RECEIVE_RIFF_LIST = 'RECEIVE_RIFF_LIST';\nexport const RECEIVE_RIFF_META = 'RECEIVE_RIFF_META';\n\nexport const TOGGLE_VIEW_USERID_MUTED = 'TOGGLE_VIEW_USERID_MUTED';\nexport const SET_VIEW_USERID_MUTED = 'SET_VIEW_USERID_MUTED';\n\nexport const RECEIVE_COLLABORATION_ID = 'RECEIVE_COLLABORATION_ID';\nexport const CREATE_PLAYLIST_SUCCESS = 'START_COLLABORATION_SUCCESS';\nexport const CREATE_PLAYLIST_FAILURE = 'START_COLLABORATION_FAILURE';\n\nexport const WEB_SOCKET_UPDATE = 'WEB_SOCKET_UPDATE';\n\n/******** WebSockets */\n\nexport const setWebSocket = payload => ({\n  type: WEB_SOCKET_UPDATE,\n  payload\n});\n\n/******** Editing Interface */\n\nexport const setRifferName = (newName, googleUser) => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/set-name`,\n      data: { token: googleUser.getAuthResponse().id_token, newName }\n    }).then(res => {\n      dispatch({ type: RECEIVE_NAME_UPDATE, payload: res.data });\n    });\n  };\n};\n\nexport const setVideoID = (videoID, googleUser) => {\n  return dispatch => {\n    //console.log( \"get url\", `/get-riffs` );\n    dispatch({\n      type: SET_VIDEO_ID,\n      payload: videoID\n    });\n    if (googleUser && googleUser.getAuthResponse) {\n      axios({\n        method: 'post',\n        url: `/get-riffs`,\n        data: { token: googleUser.getAuthResponse().id_token, videoID }\n      }).then(res => {\n        dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n      });\n      axios({\n        method: 'post',\n        url: `/get-view-riffs`,\n        data: { videoID }\n      }).then(res => {\n        dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n      });\n    }\n  };\n};\n\n//Delete Riff\nexport const deleteRiff = (riffID, googleUser) => {\n  return dispatch => {\n    axios({\n      method: 'delete',\n      url: `/riff-remove/${riffID}`,\n      data: {\n        token: googleUser.getAuthResponse().id_token\n      }\n    }).then(res => {\n      dispatch({ type: DELETE_RIFF, id: riffID });\n    });\n  };\n};\n\n// perhaps this action should somehow call the above action (setVideoID)?\nexport const setGoogleUser = (googleUser, videoID) => {\n  return dispatch => {\n    //console.log( \"get url\", `/get-riffs` );\n    dispatch({\n      type: GOOGLE_USER_SIGNIN,\n      payload: googleUser\n    });\n    axios({\n      method: 'post',\n      url: `/get-riffs`,\n      data: { token: googleUser.getAuthResponse().id_token, videoID }\n    }).then(res => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    });\n    axios({\n      method: 'post',\n      url: `/get-view-riffs`,\n      data: { videoID }\n    }).then(res => {\n      dispatch({ type: RECEIVE_RIFF_META, payload: res.data });\n    });\n  };\n};\n\nexport const getViewRiffs = videoID => {\n  return dispatch => {\n    axios({\n      method: 'post',\n      url: `/get-view-riffs`,\n      data: { videoID }\n    }).then(res => {\n      dispatch({ type: RECEIVE_RIFF_LIST, payload: res.data });\n    });\n  };\n};\n\nexport const setPlayerMode = mode => ({\n  type: SET_PLAYER_MODE,\n  payload: mode\n});\n\nexport const togglePlayerMode = mode => ({\n  type: TOGGLE_PLAYER_MODE\n});\n\n/*export const saveRiff = payload => ({\n  type: SAVE_RIFF,\n  payload\n});*/\n\nexport const saveTempAudio = (payload, duration) => ({\n  type: SAVE_TEMP_AUDIO,\n  payload,\n  duration\n});\n\nexport const editRiff = (payload, id, gus) => {\n  return dispatch => {\n    dispatch({\n      type: EDIT_RIFF,\n      payload\n    });\n\n    // id is only passed when the audio riff needs loading\n    if (id) rawLoadAxios(dispatch, id, gus);\n  };\n};\n\nexport const cancelEdit = () => ({\n  type: CANCEL_EDIT\n});\n\nexport const saveRiff = (token, payload, riff, websocket) => {\n  return dispatch => {\n    dispatch({ type: SAVE_RIFF, payload });\n\n    let fd = new FormData();\n    fd.append('token', token);\n    fd.append(riff.type === 'text' ? 'text' : 'blob', payload.payload);\n    fd.append('type', riff.type);\n    fd.append(\n      'duration',\n      riff.type === 'text' ? payload.duration : riff.duration\n    );\n    fd.append('start_time', payload.time);\n    fd.append('video_id', riff.video_id);\n    fd.append('tempId', riff.tempId);\n\n    // this may be null, and that's ok\n    fd.append('id', riff.id);\n\n    axios({\n      method: 'post',\n      url: `/save-riff`,\n      data: fd,\n      headers: { 'Content-Type': 'multipart/form-data' }\n    })\n      .then(res => {\n        // res.data.data\n        dispatch({ type: SAVE_RIFF_SUCCESS, payload: res.data });\n        // websocket call\n        websocket.send( JSON.stringify( { type: 'update', video_id: riff.video_id } ) )\n      })\n      .catch(err => {\n        dispatch({ type: SAVE_RIFF_FAILURE, payload: err.response });\n      });\n  };\n};\n\nexport const createTempRiff = (type, videoID) => ({\n  type: type === 'audio' ? CREATE_TEMP_AUDIO_RIFF : CREATE_TEMP_TEXT_RIFF,\n  videoID\n});\n\nexport const setRiffPlaying = (index, playing) => ({\n  type: playing ? SET_RIFF_PLAYING : SET_RIFF_NOT_PLAYING,\n  payload: index\n});\n\nexport const loadRiff = (id, guser) => {\n  return dispatch => {\n    rawLoadAxios(dispatch, id, guser);\n  };\n};\n\nconst rawLoadAxios = (dispatch, id, guser) => {\n  axios({\n    method: 'post',\n    url: `/load-riff`,\n    responseType: 'arraybuffer',\n    data: { token: guser ? guser.getAuthResponse().id_token : null, id } // modified to make guser optional\n  }).then(res => {\n    dispatch({ type: RIFF_LOADED, payload: res.data, id });\n  });\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { setPlayerMode, PLAY_MODE } from '../../actions/index.js';\n\nclass AllowPlayback extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { allowed: false };\n  }\n\n  componentDidMount = () => {\n    var test = new Audio();\n    test.controls = false;\n    test.src = '/dingdong.wav';\n    test\n      .play()\n      .then(() => {\n        console.log('playback ok');\n        this.setupAudioPlayers();\n      })\n      .catch(() => {\n        console.log('playback not allowed');\n      });\n  };\n\n  setupAudioPlayers = () => {\n    this.setState({ allowed: true });\n    window.audioContexts = [];\n    window.audioPlayers = [];\n    window.audioPlayerUse = [];\n    window.audioPlayersCount = 5;\n    for (let i = 0; i < 5; i++) {\n      window.audioContexts[i] = new (window.AudioContext ||\n        window.webkitAudioContext)();\n\n      window.audioPlayers[i] = new Audio(); // should be identical behavior to: document.createElement('audio');\n      window.audioPlayers[i].controls = false;\n      window.audioPlayers[i].addEventListener('ended', function() {\n        this.inUse = false;\n        console.log('riff finished');\n      });\n\n      let se = document.createElement('source');\n      window.audioPlayers[i].appendChild(se);\n      window.audioPlayers[i].srcEl = se;\n    }\n  };\n\n  render = () => {\n    if (!this.state) return null;\n\n    return !this.state.allowed ? (\n      <div\n        className=\"audio-capture\"\n        onClick={() => {\n          this.setupAudioPlayers();\n          this.props.setPlayerMode(PLAY_MODE);\n        }}\n      />\n    ) : null;\n  };\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  setPlayerMode\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AllowPlayback);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  setPlayerMode,\n  setRiffPlaying,\n  loadRiff,\n  togglePlayerMode,\n  EDIT_MODE,\n  EDIT_NEW_MODE,\n  PLAY_MODE,\n  PAUSE_MODE\n} from '../../actions/index.js';\nimport AllowPlayback from './AllowPlayback.js';\n\n// based on https://stackoverflow.com/questions/54017100/how-to-integrate-youtube-iframe-api-in-reactjs-solution\n\nclass YouTubeVideo extends React.Component {\n  componentDidMount = () => {\n    // On mount, check to see if the API script is already loaded\n\n    if (!window.YT || !window.YT.Player) {\n      // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n    } // If script is already there, load the video directly\n    else {\n      this.loadVideo();\n    }\n  };\n\n  loadVideo = () => {\n    if ( !window.YT ) return; // can be called by componentDidUpdate before window.YT has loaded\n\n    const { id } = this.props;\n\n    if (window.rifftubePlayer) window.rifftubePlayer.destroy();\n\n    this.player = new window.YT.Player('rifftube-player', {\n      videoId: id,\n      height: 390,\n      width: 640,\n      playerVars: {\n        playsinline: 1 // allows it to play inline on iOS\n      },\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      }\n    });\n\n    window.rifftubePlayer = this.player; // store global reference (used to get current playback time when needed)\n  };\n\n  onPlayerReady = event => {\n    //event.target.playVideo();\n  };\n\n  // TODO: account for muted riffs!!!!\n  checkForRiffsToLoad = t => {\n    this.props.riffs.forEach(riff => {\n      if (\n        riff.type === 'audio' &&\n        !riff.payload &&\n        !riff.loading &&\n        riff.time >= t &&\n        riff.time < t + 10\n      )\n        this.props.loadRiff(riff.id, this.props.googleUser);\n    });\n  };\n\n  onPlayerStateChange = ({ data }) => {\n    /*\n        -1 (unstarted)\n        0 (ended)\n        1 (playing)\n        2 (paused)\n        3 (buffering)\n        5 (video cued).\n        */\n\n    // the following conditional leaves out some 'else's that should never occur\n\n    if (data === 1) {\n      // playing\n\n      // the following code is\n      // needed I think... for pausing during a riff.\n      // so that (subsiquent) 'zombie' riffs can be killed,\n      // I think.\n      this.curRiff = this.props.riffsPlaying;\n\n      /*******************************************************/\n      // this timer is responsible for showing and hiding riffs\n      this.riffInterval = setInterval(() => {\n        //console.log( \"interval\", this.curRiff, this.props.riffsPlaying );\n\n        let t = window.rifftubePlayer.getCurrentTime();\n\n        // if the MetaBar component exists, update its playhead\n        if (window.metaPlayHead) {\n          window.metaPlayHead.current.style.left = `${(t / this.props.duration) * 100}%`;\n          if (window.metaUpdate)\n            window.metaUpdate(window.metaPlayHead.current);\n        }\n\n        //\n        this.checkForRiffsToLoad(t);\n\n        // first stop any zombie riffs\n        this.props.riffs.forEach((riff, index) => {\n          if (\n            this.curRiff[index] &&\n            (t < riff.time || t > riff.time + riff.duration)\n          ) {\n            if (this.curRiff[index].inUse) this.curRiff[index].inUse = false;\n\n            // by setting this to false, text riffs will be hidden\n            this.props.setRiffPlaying(index, false);\n            this.curRiff[index] = null;\n\n            if (riff.type === 'audio')\n              // make sure all audio clips have stopped\n              this.audLock--;\n            if (!this.audLock) {\n              window.rifftubePlayer.setVolume(this.vol ? this.vol : 100); // hopefully unnecessary volume failsafe\n              delete this.vol;\n            }\n          }\n        });\n\n        // next start any that should be playing\n        this.props.riffs.forEach((riff, index) => {\n          // the riff will start playing within half a second, or will be skipped\n          if (\n            !this.curRiff[index] &&\n            t > riff.time &&\n            t < riff.time + 0.5\n          ) {\n            this.props.setRiffPlaying(index, true);\n            this.curRiff[index] = true; // used for text only; overwritten for audio\n\n            if (riff.type === 'audio') {\n              if (!this.vol) {\n                this.vol = window.rifftubePlayer.getVolume();\n                window.rifftubePlayer.setVolume(this.vol * 0.5);\n              }\n\n              // keeps track of how many audio tracks need to end before volume should be restored\n              if (!this.audLock) this.audLock = 1;\n              else this.audLock++;\n\n              if (!riff.payload) {\n                console.log('empty payload error');\n                return;\n              } // DEBUG - SHOULD BE REMOVED\n              var audioURL = URL.createObjectURL(riff.payload);\n              //debugger;\n\n              window.lastRiff = riff.payload;\n\n              // FIX THIS:\n\n              for (let i = 0; i < window.audioPlayersCount; i++) {\n                /*\n                if ( window.audioContexts[i].inUse ) continue;\n                let audioContext = window.audioContexts[i];\n                window.audioContexts[i].inUse = true;\n                var blob = riff.payload;\n                new Response(blob).arrayBuffer().then(function(arrayBuffer) {\n                  window.audioContexts[0].decodeAudioData(arrayBuffer, audioData => {\n                    debugger;\n                    var source = window.audioContexts[i].createBufferSource();\n                    source.buffer = audioData;\n                    source.connect(window.audioContexts[i].destination);\n                    source.start()\n                  })\n                });\n                */\n\n                let audio = window.audioPlayers[i];\n                if (audio.inUse) continue;\n                audio.inUse = true;\n\n                // TEST:\n                audio.srcEl.src = audioURL;\n                audio.load();\n                audio.play();\n\n                /*\n                var se = document.createElement('source');\n                audio.appendChild(se);\n                se.src = audioURL;\n                //se.type = 'audio/webm';\n                audio.load();\n                audio.play();\n                */\n\n                // ORIG:\n                /*\n                audio.src = audioURL;\n                audio.play();\n                */\n\n                console.log('play riff! at ', i);\n                this.curRiff[index] = audio; // audioContext;\n                break;\n              }\n            }\n          }\n        });\n      }, 100); // 100/1000 = 1/10 s\n\n      if (this.props.mode !== PLAY_MODE) {\n        // change mode state\n        this.props.setPlayerMode(PLAY_MODE);\n      }\n    } // not playing\n    else {\n      // stop riff-check interval when not playing\n      clearInterval(this.riffInterval);\n\n      if (this.props.mode === PLAY_MODE) {\n        // change mode state\n        this.props.setPlayerMode(PAUSE_MODE);\n      }\n    }\n  };\n\n  componentDidUpdate = prevProps => {\n    //console.log( \"youtube vid component upate\" );\n\n    this.checkForRiffsToLoad(0); // check if any riffs at < 10s in need loading\n\n    if (this.props.id !== prevProps.id) this.loadVideo();\n\n    if (this.props.mode !== prevProps.mode) {\n      if (\n        (this.props.mode === EDIT_MODE ||\n          this.props.mode === EDIT_NEW_MODE ||\n          this.props.mode === PAUSE_MODE) &&\n        this.player.getPlayerState() === 1\n      ) {\n        this.player.pauseVideo();\n      } else if (\n        this.props.mode === PLAY_MODE &&\n        this.player.getPlayerState() !== 1\n      ) {\n        this.player.playVideo();\n      }\n    }\n  };\n\n  render = () => {\n    return (\n      <React.Fragment>\n        <div className=\"rifftube-container\">\n          <AllowPlayback />\n          <div className=\"rifftube-overlay\">\n            <div className=\"rifftube-riffs-container\">\n              {Object.keys(this.props.riffsPlaying)\n                .filter(\n                  i =>\n                    this.props.riffsPlaying[i] &&\n                    this.props.riffs[i] &&\n                    this.props.riffs[i].type === 'text'\n                )\n                .map(key => (\n                  <div\n                    key={this.props.riffs[key].id}\n                    className=\"rifftube-textriff\"\n                  >\n                    {this.props.riffs[key].payload}\n                  </div>\n                ))}\n            </div>\n          </div>\n          <div id=\"rifftube-player\" />\n        </div>\n      </React.Fragment>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({\n  mode: state.mode,\n  //riffs: state.riffs.all,\n  riffsPlaying: state.riffsPlaying,\n  googleUser: state.googleUser,\n  duration: state.duration\n});\n\nconst mapDispatchToProps = {\n  setPlayerMode,\n  setRiffPlaying,\n  togglePlayerMode,\n  loadRiff\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(YouTubeVideo);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { GoogleLogin } from 'react-google-login-component';\nimport { setGoogleUser } from '../../actions/index.js';\n\nclass Login extends React.Component {\n  render() {\n    return (\n      <GoogleLogin\n        socialId=\"941154439836-s6iglcrdckcj6od74kssqsom58j96hd8.apps.googleusercontent.com\"\n        className=\"google-login\"\n        scope=\"profile email\"\n        fetchBasicProfile={false}\n        responseHandler={gus => {\n          this.props.setGoogleUser(gus, this.props.videoID);\n        }}\n        buttonText=\"Login With Google\"\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  videoID: state.videoID\n});\n\nconst mapDispatchToProps = {\n  setGoogleUser\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { editRiff, deleteRiff } from '../../actions/index.js';\nimport Delete from '../../images/delete-24px.svg';\nimport Edit from '../../images/edit-24px.svg';\nimport Audio from '../../images/settings_voice-24px.svg';\nimport Text from '../../images/chat-24px.svg';\n\n/* this component is where a user can edit their riff */\nfunction RiffDetail(props) {\n  return (\n    <div\n      className={`riff-detail${props.selected ? ' riff-detail-selected' : ''}`}\n    >\n      <div>\n        <ul className=\"riff-detail-list\">\n          {props.type === 'audio' ? (\n            <div className=\"audio-icon\">\n              <img alt=\"audio\" src={Audio} />\n            </div>\n          ) : (\n            <div className=\"text-icon\">\n              <img alt=\"text\" src={Text} />\n            </div>\n          )}\n          <li>\n            start time: {props.time.toFixed ? props.time.toFixed(2) : null}\n          </li>\n          <li>duration: {props.duration.toFixed(2)}secs</li>\n          {/* <li>type: {props.type}</li> */}\n        </ul>\n        <div className=\"edit-riff-buttons\">\n          <button\n            className=\"riff-button\"\n            onClick={() =>\n              props.editRiff(\n                props.index,\n                props.type === 'audio' && !props.payload ? props.id : null,\n                props.googleUser\n              )\n            }\n          >\n            <img alt=\"edit button\" src={Edit} />\n          </button>\n          <button\n            className=\"riff-button-delete\"\n            onClick={ () => { if (window.confirm(\"Delete?\")) props.deleteRiff(props.id, props.googleUser); } }\n          >\n            <img alt=\"delete button\" src={Delete} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  googleUser: state.googleUser\n});\n\nconst mapDispatchToProps = {\n  editRiff,\n  deleteRiff\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RiffDetail);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport RiffDetail from './RiffDetail.js';\n\n/* this component maps over all of the user's riffs for this video */\nfunction RiffList(props) {\n  console.log('display', props.riffs);\n  return (\n    <div className=\"list-of-riffs\">\n      {props.riffs\n        ? props.riffs.sort( (e1,e2) => (e1.time - e2.time) ).map((riff, index) => (\n            <RiffDetail\n              key={riff.id}\n              {...riff}\n              index={index}\n              selected={props.riffsPlaying[index] === true}\n            />\n          ))\n        : null}\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  riffs: state.riffs.all,\n  riffsPlaying: state.riffsPlaying\n});\n\nexport default connect(mapStateToProps, null)(RiffList);\n","import React from 'react';\n\nclass Record extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      recorder: null,\n      gumStream: null,\n      recordingState: false\n    };\n  }\n\n  componentDidMount() {\n    if (navigator.mediaDevices) {\n      navigator.mediaDevices\n        .getUserMedia({ audio: true, video: false })\n        .then(stream => {\n          this.setState( { \"gumStream\": stream } );\n        }).catch(function(err) { //enable the record button if getUSerMedia() fails \n          console.log( \"oops, can't get stream\", err );\n        });\n    }\n  }\n\n  render() {\n    var ret; // var for the value to be returned\n\n    if (navigator.mediaDevices) {\n      if (!this.state.recordingState) {\n        ret = (\n          <button\n            id=\"recordBtn\"\n            onClick={() => {\n              this.setState({ recordingState: true });\n              this.startTime = Date.now();\n              //this.state.mediaRecorder.start();\n\n              var AudioContext = window.AudioContext          // Default\n                  || window.webkitAudioContext;  // Safari and old versions of Chrome\n              var audioContext = new AudioContext();\n              var input = audioContext.createMediaStreamSource(this.state.gumStream);\n\n              var recorder = new window.WebAudioRecorder(input, {\n                workerDir: \"/lib/\",\n                encoding: 'mp3',\n                onEncoderLoading: (recorder, encoding) => {\n                    // show \"loading encoder...\" display \n                    console.log(\"Loading \" + encoding + \" encoder...\");\n                },\n                onEncoderLoaded: (recorder, encoding) => {\n                    // hide \"loading encoder...\" display\n                    console.log(encoding + \" encoder loaded\");\n                }\n              });\n\n              //this.setState( recorder );\n              this.recorder = recorder;\n\n              recorder.onComplete = (recorder, blob) => {\n                console.log(\"Encoding complete\");\n                //createDownloadLink(blob, recorder.encoding);\n                this.props.saveTempAudio(blob, this.duration);\n              };\n              recorder.setOptions({\n                  timeLimit: 120,\n                  encodeAfterRecord: true,\n                  mp3: {\n                      bitRate: 160\n                  }\n              });\n\n              //start the recording process \n              console.log(\"Recording started\");\n              recorder.startRecording();\n            }}\n          >\n            Record\n          </button>\n        );\n      } else {\n        ret = (\n          <button\n            id=\"stopBtn\"\n            onClick={() => {\n              this.setState({ recordingState: false });\n              this.duration = (Date.now() - this.startTime) / 1000;\n              //this.state.mediaRecorder.stop();\n\n              this.state.gumStream.getAudioTracks()[0].stop();\n              this.recorder.finishRecording();\n\n              // create new stream\n              navigator.mediaDevices\n                .getUserMedia({ audio: true, video: false })\n                .then(stream => {\n                  this.setState( { \"gumStream\": stream } );\n                }).catch(function(err) { //enable the record button if getUSerMedia() fails \n                  console.log( \"oops, can't get stream\", err );\n                });\n            }}\n          >\n            stop\n          </button>\n        );\n      }\n    } else ret = <span>navigator.mediaDevices not supported. sorry.</span>;\n\n    return (\n      <React.Fragment>\n        {ret}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Record;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Record from './Record.js';\nimport {\n  saveRiff,\n  setPlayerMode,\n  saveTempAudio,\n  cancelEdit,\n  EDIT_MODE\n} from '../../actions/index.js';\n\nclass EditRiff extends React.Component {\n\n  constructor(props)\n  {\n    super(props);\n    this.durationField = React.createRef();\n    this.htmlPayloadField = React.createRef();\n    this.startTimeField = React.createRef();\n  }\n\n  render() {\n    console.log('ed rif red');\n    return (\n      <div className=\"edit-riff\">\n        <div className=\"edit-riff-inner\">\n          {this.props.tempRiff.type === 'audio' ? (\n            <React.Fragment>\n              {this.props.mode === EDIT_MODE && this.props.editIndex && !this.props.tempRiff.payload ? (\n                <span>Loading...</span>\n              ) : null}\n              <Record saveTempAudio={this.props.saveTempAudio} />\n              {this.props.tempRiff.payload ? (\n                <button\n                  onClick={async () => {\n                    debugger;\n\n                    // https://stackoverflow.com/questions/43620594/audio-blob-not-working-in-ios-safari\n                    // answer by scottmizo\n                    \n                    /*\n                    var blob = this.props.tempRiff.payload;\n                    var audioContext = new (window.webkitAudioContext || window.AudioContext)();\n                    var arrayBuffer = await (new Response(blob)).arrayBuffer();\n                    audioContext.decodeAudioData(arrayBuffer, audioData => {\n                      var source = audioContext.createBufferSource();\n                      source.buffer = audioData;\n                      source.connect(audioContext.destination);\n                      source.start()\n                    });\n                    */\n                    \n\n                    \n                    var audio = document.createElement('audio');\n                    var source = document.createElement('source');\n                    audio.appendChild(source);\n\n                    audio.controls = false;\n                    var audioURL = URL.createObjectURL(\n                      this.props.tempRiff.payload\n                    );\n                    \n                    source.src = audioURL;\n                    audio.load();\n\n                    //audio.src = audioURL;\n                    audio.play();\n                    \n                  }}\n                >\n                  Play\n                </button>\n              ) : null}\n              <br />\n              <div>\n                Start:{' '}\n                <input\n                  id=\"riff-start-field\"\n                  defaultValue={this.props.tempRiff.time}\n                  ref={this.startTimeField}\n                />\n              </div>\n              <button\n                disabled={!this.props.tempRiff.payload}\n                onClick={() => {\n                  this.props.saveRiff(\n                    this.props.googleUser.getAuthResponse().id_token,\n                    {\n                      payload: this.props.tempRiff.payload,\n                      time: Number(this.startTimeField.current.value)\n                    },\n                    this.props.tempRiff\n                  );\n                }}\n              >\n                Save\n              </button>\n            </React.Fragment>\n          ) : (\n            <React.Fragment>\n              <div>HTML payload:</div>\n              <textarea id=\"riff-edit-field\" ref={this.htmlPayloadField} defaultValue={this.props.tempRiff.payload} />\n\n              <div>\n                Duration:{' '}\n                <input\n                  id=\"riff-duration-field\"\n                  defaultValue={this.props.tempRiff.duration || 2}\n                  ref={this.durationField}\n                />\n              </div>\n              <div>\n                Start:{' '}\n                <input\n                  id=\"riff-start-field\"\n                  defaultValue={this.props.tempRiff.time}\n                  ref={this.startTimeField}\n                />\n              </div>\n              <button\n                onClick={() => {\n                  this.props.saveRiff(\n                    this.props.googleUser.getAuthResponse().id_token,\n                    {\n                      payload: this.htmlPayloadField.current.value,\n                      duration: Number(\n                        this.durationField.current.value\n                      ),\n                      time: Number(this.startTimeField.current.value)\n                    },\n                    this.props.tempRiff,\n                    this.props.websocket\n                  );\n                }}\n              >\n                Save\n              </button>\n            </React.Fragment>\n          )}\n\n          <button\n            onClick={() => {\n              this.props.cancelEdit();\n            }}\n          >\n            Cancel\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  mode: state.mode,\n  tempRiff: state.riffs.temp,\n  editIndex: state.riffs.editIndex,\n  googleUser: state.googleUser,\n  websocket: state.websocket\n});\n\nconst mapDispatchToProps = {\n  setPlayerMode,\n  saveRiff,\n  saveTempAudio,\n  cancelEdit\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditRiff);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createTempRiff } from '../../actions/index.js';\n\nclass RiffButton extends React.Component {\n  render() {\n    return (\n      <button\n        className=\"riff-button\"\n        onClick={() => {\n          this.props.createTempRiff(this.props.type, this.props.videoID);\n        }}\n      >\n        {this.props.type}\n      </button>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  videoID: state.videoID\n});\n\nconst mapDispatchToProps = {\n  createTempRiff\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RiffButton);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport RiffList from './RiffList.js';\nimport EditRiff from './EditRiff.js';\nimport RiffButton from './RiffButton.js';\nimport { setRifferName } from '../../actions'; // this and below are the same file\nimport { EDIT_MODE, EDIT_NEW_MODE } from '../../actions/index.js';\n\n/*This component houses all of the riff buttons and the rifflist*/\nfunction EditControls(props) {\n  return (\n    <div className=\"control-panel\">\n      {// make this into a component?:\n      props.name ? (\n        <div>\n          Riffer Name:&nbsp;\n          {props.name}\n          <button\n            type=\"button\"\n            onClick={() => {\n              var n = prompt('Enter name', props.name);\n              if (n) props.setRifferName(n, props.googleUser);\n            }}\n          >\n            Update Name\n          </button>\n        </div>\n      ) : null}\n\n      {/* to add back later <Collaboration /> */}\n\n      <div>\n        <h2 className=\"add-riff-title\">Add New Riff</h2>\n        <RiffButton type=\"audio\" />\n        <RiffButton type=\"text\" />\n\n        {props.mode === EDIT_MODE || props.mode === EDIT_NEW_MODE ? (\n          <EditRiff />\n        ) : null}\n      </div>\n      <h2 className=\"riff-list-title\">Control Panel</h2>\n      <RiffList />\n    </div>\n  );\n}\n\nlet mapStateToProps = state => ({\n  mode: state.mode,\n  name: state.name,\n  googleUser: state.googleUser\n});\n\nconst mapDispatchToProps = {\n  setRifferName\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditControls);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nclass MetaBar extends React.Component {\n  constructor(props) {\n    super(props);\n    window.metaPlayHead = React.createRef();\n  }\n  render() {\n    return (\n      <div className=\"container-riff-meta\">\n        <div id=\"meta-play-head\" ref={window.metaPlayHead} />\n        {this.props.riffsMeta && this.props.duration && this.props.riffs\n          ? this.props.riffsMeta\n              .filter((el) => !this.props.riffs.find((t) => el.id === t.id))\n              .map((riff) => (\n                <div\n                  className=\"riff-meta\"\n                  style={{\n                    left: (riff.time / this.props.duration) * 100 + '%',\n                    width: (riff.duration / this.props.duration) * 100 + '%',\n                  }}\n                />\n              ))\n          : null}\n        {this.props.riffs\n          ? this.props.riffs.map((riff) => (\n              <div\n                className=\"riff-own-meta\"\n                style={{\n                  left: (riff.time / this.props.duration) * 100 + '%',\n                  width: (riff.duration / this.props.duration) * 100 + '%',\n                }}\n              ></div>\n            ))\n          : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  duration: state.duration,\n  riffsMeta: state.riffsMeta,\n  riffs: state.riffs.all,\n});\n\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MetaBar);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction NavBar({ color }) {\n  return (\n    <nav className=\"navbar\">\n      <NavLink style={{ color }} to=\"/\">\n        Home\n      </NavLink>\n      <NavLink style={{ color }} to=\"/riff\">\n        Start Riffing\n      </NavLink>\n      <NavLink style={{ color }} to=\"/about\">\n        About\n      </NavLink>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport YouTubeVideo from '../YouTubeVideo/YouTubeVideo';\nimport Login from '../Login/Login';\nimport EditControls from './EditControls';\nimport { setVideoID, setWebSocket } from '../../actions';\nimport MetaBar from '../MetaBar';\nimport NavBar from '../NavBar.js';\n\nclass EditInterface extends React.Component {\n  constructor(props) {\n    super(props);\n    this.videoIDRef = React.createRef();\n    this.state = { websocket: null };\n  }\n\n  componentDidMount = () => {\n    if (this.props.match.params.videoID) {\n      this.props.setVideoID(\n        this.props.match.params.videoID,\n        this.props.googleUser\n      );\n      this.videoIDRef.current.value = this.props.match.params.videoID;\n    }\n  };\n\n  componentDidUpdate = (prevProps, prevState) => {\n    if (this.props.match.params.videoID !== this.props.videoID) {\n      this.props.setVideoID(\n        this.props.match.params.videoID,\n        this.props.googleUser\n      );\n      this.videoIDRef.current.value = this.props.match.params.videoID;\n    }\n\n    if (\n      this.loggedIn() &&\n      (!this.state.websocket || this.props.videoID !== prevProps.videoID)\n    ) {\n      //const websocket = new WebSocket( `ws://localhost:3300/riff?videoID=${this.props.match.params.videoID}&googleToken=${this.props.googleUser.getAuthResponse().id_token}` );\n      var baseURL;\n      if (process.env.NODE_ENV === 'production')\n        baseURL = 'wss://rifftube.herokuapp.com';\n      else baseURL = 'ws://localhost:3300';\n\n      const websocket = new WebSocket(\n        `${baseURL}/riff?videoID=${\n          this.props.match.params.videoID\n        }&googleToken=${this.props.googleUser.getAuthResponse().id_token}`\n      );\n      websocket.onmessage = function (event) {\n        console.log(event.data);\n      };\n      this.props.setWebSocket(websocket);\n    }\n  };\n\n  loggedIn = () => {\n    if (this.props.googleUser) return this.props.googleUser.isSignedIn();\n\n    return false;\n  };\n\n  authCheck = (Component, DefaultComponent) => {\n    return this.loggedIn() ? <Component /> : <DefaultComponent />;\n  };\n  /* extracts the youtube id from a url. got help from: https://ctrlq.org/code/19797-regex-youtube-id */\n  extractVideoID = (url) => {\n    var regExp = /^.*((youtu.be\\/)|(v\\/)|(\\/u\\/\\w\\/)|(embed\\/)|(watch\\?))\\??v?=?([^#&?]*).*/;\n    var match = url.match(regExp);\n    if (match && match[7].length === 11) {\n      return match[7];\n    } else {\n      return url; // if extraction fails, fallback on assuming they gave an ID\n    }\n  };\n\n  render() {\n    return this.props.match.params.videoID ? (\n      <React.Fragment>\n        <NavBar color=\"grey\" />\n        <div className=\"youtube-section\">\n          <div className=\"top-section\">\n            <div className=\"title-and-url\">\n              <h1>RiffTube</h1>\n            </div>\n          </div>\n          <h4 className=\"get-started-instructions\">\n            <Route\n              exact\n              path=\"/riff/:videoID\"\n              render={() => {\n                return this.loggedIn() ? null : (\n                  <React.Fragment>\n                    <Login /> <p>to get started</p>\n                  </React.Fragment>\n                );\n              }}\n            />\n          </h4>\n          <form\n            onSubmit={(e) => {\n              const vID = this.extractVideoID(this.videoIDRef.current.value);\n\n              this.props.history.push(`/riff/${vID}`);\n\n              this.props.setVideoID(vID, this.props.googleUser);\n\n              e.preventDefault();\n            }}\n          >\n            <label>Paste any YouTube URL here &#8594; </label>\n            <input\n              type=\"text\"\n              defaultValue={this.props.videoID}\n              ref={this.videoIDRef}\n            />\n            <button className=\"btn\" id=\"change-video-btn\" type=\"submit\">\n              Change Video\n            </button>\n          </form>\n          <YouTubeVideo id={this.props.videoID} riffs={this.props.riffs} />\n          <MetaBar />\n          <div className=\"view-share-riff-link\">\n            <a\n              href={\n                '/view/' +\n                this.props.videoID +\n                (this.props.user_id ? '?solo=' + this.props.user_id : '')\n              }\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              View &amp; Share Riffed Video\n            </a>\n          </div>\n        </div>\n        <Route\n          exact\n          path=\"/riff/:videoID\"\n          render={() => {\n            return this.loggedIn() ? <EditControls /> : null;\n          }}\n        />\n      </React.Fragment>\n    ) : (\n      <Redirect to={`/riff/${this.props.videoID}`} />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  riffs: state.riffs.all,\n  videoID: state.videoID,\n  googleUser: state.googleUser,\n  user_id: state.user_id,\n});\n\nconst mapDispatchToProps = {\n  setVideoID,\n  setWebSocket,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditInterface);\n","import React from 'react';\nimport YouTubeVideo from '../YouTubeVideo/YouTubeVideo';\n\nclass ViewFilter extends React.Component {\n  constructor(props) {\n    super(props);\n    // window.metaPlayhead gets updated by the youtube component\n    window.metaPlayHead = React.createRef();\n    this.selectDiv = React.createRef();\n    window.metaUpdate = (el) => {\n      console.log(el.offsetLeft);\n      this.selectDiv.current.scrollLeft =\n        el.offsetLeft - this.selectDiv.current.offsetWidth / 2;\n    };\n\n    this.state = {\n      filteredRiffs: [],\n      overlappingRiffs: [],\n      nonOverlappingRiffs: null,\n      selectedRiffs: null,\n      tracks: [],\n    };\n    // filtered riffs is the final result\n    // overlapping riffs is a list of sets [of ids] of overlapping riffs\n    // selected riffs is a set\n    // tracks are used for the UI\n  }\n\n  selectRiff = (newRiff) => {\n    // use id to find riff in \"master\" list\n    //const riff = this.props.riffs.find( r => r.id == selected_id );\n    let riff;\n    if (this.state.nonOverlappingRiffs.has(riff)) return;\n\n    const selectedRiffs = new Set(this.state.selectedRiffs);\n\n    const newFiltered = new Set(this.props.riffs);\n\n    const otherOverlaps = new Set(); //new Set( this.state.overlappingRiffs );\n    this.state.overlappingRiffs.forEach((el) => otherOverlaps.add(new Set(el)));\n\n    riff = newRiff;\n\n    do {\n      // go through each set of overlapping riffs\n      for (const set of this.state.overlappingRiffs) {\n        // if that set contains the selected riff, remove all its values from the\n        if (set.has(riff)) {\n          set.forEach((el) => {\n            selectedRiffs.delete(el);\n            newFiltered.delete(el);\n          });\n        }\n      }\n\n      selectedRiffs.add(riff);\n\n      // now the hard part\n\n      for (const r of selectedRiffs) {\n        // find and delete sets of overlap that contain a selected riff\n        const toDelete = [];\n        for (const set of otherOverlaps) {\n          if (set.has(r)) {\n            toDelete.push(set);\n          }\n        }\n        for (const set of toDelete) {\n          otherOverlaps.delete(set);\n          // from the sets in question, remove all their riffs from other overlap sets\n          // (because they are no longer valid options)\n          var curOverlap = new Set();\n          for (const redu of otherOverlaps) {\n            for (const tod of set) {\n              newFiltered.delete(tod);\n              redu.delete(tod);\n            }\n          }\n        }\n      }\n      for (const redu of otherOverlaps) {\n        if (redu.size > 0) curOverlap = new Set([...curOverlap, ...redu]);\n      }\n\n      if (curOverlap.size > 0) riff = curOverlap.values().next().value;\n    } while (curOverlap.size > 0);\n\n    // generate final filtered list\n    const filteredRiffs = [...newFiltered, ...selectedRiffs];\n\n    this.setState({ filteredRiffs, selectedRiffs });\n  };\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.riffs !== this.props.riffs) {\n      debugger;\n\n      // if riffs have changed, we need to recalculate\n\n      // multiple tracks are used to display overlapping riffs at the same time\n      const tracks = [[]];\n      const trackPos = [0]; // time code where last riff on track ends\n\n      const nonOverlappingRiffs = new Set();\n\n      // used to keep track of conflicting riffs\n      const runningRiffs = [];\n\n      // these will overwrite the current values after being built\n      const overlappingRiffs = [];\n      const selectedRiffs = new Set();\n\n      // slope basically means \"was the last action to add or remove from the running list\"\n      var slope = 0;\n\n      // sort riffs by starting time\n      this.props.riffs.sort((e1, e2) => e1.time - e2.time);\n\n      // loop through sorted riffs\n      for (const riff of this.props.riffs) {\n        // check to see if any riffs end before this riff starts\n        if (runningRiffs.length > 0) {\n          // this could be optimized by first sorting running set\n          const toDelete = [];\n          for (const toCheck of runningRiffs) {\n            // (see above)\n            if (toCheck.time + toCheck.duration <= riff.time) {\n              // only add set if the prev action was an add,\n              // and there is more than 1 riff in the set\n              if (slope > 0 && runningRiffs.length > 1) {\n                overlappingRiffs.push(new Set(runningRiffs));\n\n                // when adding overlapping set, find if any are in track 0\n                // if so, they go into selectedRiffs\n                for (const candi of runningRiffs) {\n                  if (tracks[0].includes(candi)) {\n                    selectedRiffs.add(candi);\n                    break;\n                  }\n                }\n              } else if (slope > 0) {\n                // 'if' part may be unnecessary\n                nonOverlappingRiffs.add(toCheck);\n              }\n\n              // don't delete in place while looping\n              toDelete.push(toCheck);\n              slope = -1; // last action was to remove\n            }\n          }\n          for (const el of toDelete)\n            runningRiffs.splice(runningRiffs.indexOf(el), 1);\n        }\n\n        // add this riff to running list\n        runningRiffs.push(riff);\n\n        // keep running list sorted by first ending\n        runningRiffs.sort(\n          (e1, e2) => e1.time + e1.duration - (e2.time + e2.duration)\n        );\n\n        // last action was to add\n        slope = 1;\n\n        // assign riff to a track\n        var flag = true;\n        for (var i = 0; i < tracks.length; i++) {\n          // check whether this track is available\n          if (trackPos[i] <= riff.time) {\n            tracks[i].push(riff);\n            trackPos[i] = riff.time + riff.duration;\n            flag = false;\n            break;\n          }\n        }\n\n        // if no track was found, add one\n        if (flag) {\n          tracks.push([riff]);\n          trackPos.push(riff.time + riff.duration);\n        }\n      }\n\n      // cleanup after loop\n      // check to see if running set has more than 1 riff\n      // if so, add it etc.\n      if (runningRiffs.length > 1) {\n        overlappingRiffs.push(new Set(runningRiffs));\n\n        for (const candi of runningRiffs) {\n          if (tracks[0].includes(candi)) {\n            selectedRiffs.add(candi);\n            break;\n          }\n        }\n      } else nonOverlappingRiffs.add(runningRiffs[0]);\n\n      const filteredRiffs = [...tracks[0]];\n\n      this.setState({\n        filteredRiffs,\n        overlappingRiffs,\n        nonOverlappingRiffs,\n        selectedRiffs,\n        tracks,\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <YouTubeVideo id={this.props.id} riffs={this.state.filteredRiffs} />\n        <div\n          ref={this.selectDiv}\n          style={{ fontSize: '2em', overflow: 'hidden', width: '640px' }}\n        >\n          <div\n            style={{\n              height: `${this.state.tracks.length * 0.75}em`,\n              width: `${this.props.duration}em`,\n              position: 'relative',\n            }}\n          >\n            <div\n              id=\"meta-play-head\"\n              style={{ backgroundColor: 'red', height: 'inherit' }}\n              ref={window.metaPlayHead}\n            />\n            {this.state.tracks.map((trackArray) => (\n              <div\n                style={{ width: `${this.props.duration}em`, height: '0.75em' }}\n              >\n                {trackArray.map((riff) => (\n                  <div\n                    style={{\n                      position: 'absolute',\n                      overflow: 'hidden',\n                      textOverflow: 'ellipsis',\n                      whiteSpace: 'nowrap',\n                      fontSize: '0.25em',\n                      lineHeight: '3em',\n                      verticalAlign: 'middle',\n                      left: `${riff.time * 4}em`,\n                      height: '3em',\n                      width: `${riff.duration * 4}em`,\n                      backgroundColor: this.state.filteredRiffs.includes(riff)\n                        ? 'red'\n                        : 'lightgrey',\n                    }}\n                    onClick={() => this.selectRiff(riff)}\n                  >\n                    {riff.name}\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ViewFilter;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ViewFilter from './ViewFilter';\n\nclass AuthorSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { names: [], muted: {}, filteredRiffs: [], all: true };\n  }\n\n  setMute = (id, mute) => {\n    this.setState((state, props) => {\n      // new state\n      const m = { ...state.muted, [id]: mute };\n\n      // const temp = props.riffs.filter((el) => !m[el.user_id]);\n\n      return {\n        muted: m,\n        filteredRiffs: props.riffs.filter((el) => !m[el.user_id]),\n        all: false,\n      };\n    });\n  };\n\n  toggleMute = (id) => {\n    this.setMute(id, !this.state.muted[id]);\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.props);\n\n    if (\n      prevState.muted !== this.state.muted ||\n      prevState.all !== this.state.all\n    ) {\n      if (this.state.all) {\n        this.props.history.push(`/view/${this.props.videoID}`);\n      } else {\n        // new muted state\n        const m = { ...this.state.muted };\n\n        // not muted\n        const nm2 = this.state.names.map((el) => el.id);\n        const nm = nm2.filter((el) => !m[el]);\n        const nmStr = '?solo=' + nm.join(',');\n\n        this.props.history.push(`/view/${this.props.videoID}${nmStr}`);\n      }\n    }\n\n    if (\n      prevProps.timestamp !== this.props.timestamp ||\n      (prevProps.riffs.length === 0 && this.props.riffs.length > 0)\n    ) {\n      //( prevProps.riffs !== this.props.riffs )\n      const includes = (arr, id) => arr.some((el) => el.id === id);\n\n      var names = [...this.state.names];\n\n      const rifferList = this.props.riffers\n        ? this.props.riffers.indexOf(',') >= 0\n          ? this.props.riffers.split(',')\n          : [this.props.riffers]\n        : [];\n\n      const m = { ...this.state.muted };\n\n      this.props.riffs.forEach((riff) => {\n        //console.log( \"name\", el.name, includes( names, el.user_id ) );\n        if (!includes(names, riff.user_id)) {\n          //this.setState( state => ({ names: [ ...this.state.names, { name: el.name, id: el.user_id } ] }))\n          names.push({ name: riff.name, id: riff.user_id });\n\n          if (this.props.riffers !== undefined) {\n            m[riff.user_id] = !rifferList.some(\n              (riffer) => riff.user_id === Number(riffer)\n            );\n            //this.setMute( riff.user_id, !rifferList.some( riffer => riff.user_id === Number(riffer) ) );\n          }\n        }\n      });\n      this.setState({\n        names,\n        muted: m,\n        all: this.props.riffers === undefined,\n        filteredRiffs:\n          this.props.riffers === undefined\n            ? this.props.riffs\n            : this.props.riffs.filter((el) => !m[el.user_id]),\n      });\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <ViewFilter\n          id={this.props.videoID}\n          duration={this.props.duration}\n          riffs={this.state.filteredRiffs}\n        />\n        <div\n          onClick={() =>\n            this.setState({\n              muted: {},\n              all: !this.state.all,\n              filteredRiffs: this.props.riffs,\n            })\n          }\n          style={{\n            backgroundColor: this.state.all ? 'blue' : 'gray',\n          }}\n        >\n          All\n        </div>\n        {this.state.names.map((el) => (\n          <div\n            key={el.id}\n            onClick={() => this.toggleMute(el.id)}\n            style={{\n              backgroundColor: this.state.muted[el.id] ? 'gray' : 'blue',\n            }}\n          >\n            {el.name}\n          </div>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  timestamp: state.riffs.timestamp,\n});\n\nexport default connect(mapStateToProps, null)(AuthorSelector);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport AuthorSelector from './AuthorSelector';\nimport { setVideoID, getViewRiffs } from '../../actions';\nimport NavBar from '../NavBar.js';\n\nconst queryString = require('query-string');\n\nclass ViewInterface extends React.Component {\n\n    componentDidMount = () =>\n    {\n        this.props.setVideoID( this.props.match.params.videoID );\n\n        this.props.getViewRiffs( this.props.match.params.videoID );\n    };\n\n    render = () =>\n    {\n        const parsed = queryString.parse(this.props.location.search);\n\n        //console.log( parsed );\n\n        return (\n            <React.Fragment>\n                <NavBar color=\"grey\" />\n                <div style={ {marginTop: \"4em\"} }>\n                    <h1>View {this.props.match.params.videoID}</h1>\n                    <AuthorSelector\n                        duration={this.props.duration}\n                        history={this.props.history}\n                        videoID={this.props.match.params.videoID}\n                        riffers={ parsed.solo }\n                        riffs={this.props.riffs} />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    riffs: state.riffs.all,\n    duration: state.duration\n  });\n  \n  const mapDispatchToProps = {\n    setVideoID,\n    getViewRiffs\n  };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewInterface);","import React from 'react';\nimport MovieImage from '../images/undraw_movie_night_93wl.svg';\n\nimport MaterialIcon from 'material-icons-react';\nimport { Link } from 'react-router-dom';\nimport NavBar from './NavBar.js';\n\nfunction LandingPage() {\n  return (\n    <div className=\"landing-page\">\n      <NavBar color=\"grey\" />\n      <section className=\"top-part\">\n        <div className=\"heading\">\n          <span className=\"heading-primary-main\">RiffTube</span>\n          <span className=\"heading-primary-sub\">\n            Add Your Voice to YouTube Videos\n          </span>\n          <Link to=\"/riff\" className=\"get-started-btn btn\">\n            Get Started &#8594;\n          </Link>\n        </div>\n        <img alt=\"movie theater\" className=\"movie-image\" src={MovieImage}></img>\n      </section>\n      <section className=\"middle-part\">\n        <div className=\"middle-text\">\n          <h3>Riffing for the Riff Raff</h3>\n        </div>\n        <div className=\"features\">\n          <div className=\"feature feature-one\">\n            <MaterialIcon icon=\"mic\" color=\"#a41320\" size=\"medium\" />\n\n            <p>Record your voice</p>\n          </div>\n          <div className=\"feature feature-two\">\n            <MaterialIcon icon=\"edit\" color=\"#a41320\" size=\"medium\" />\n\n            <p>Edit your recordings</p>\n          </div>\n          <div className=\"feature feature-three\">\n            <MaterialIcon icon=\"people\" color=\"#a41320\" size=\"medium\" />\n\n            <p>Add your friends' voices</p>\n          </div>\n          <div className=\"feature feature-three\">\n            <MaterialIcon icon=\"share\" color=\"#a41320\" size=\"medium\" />\n\n            <p>Share with anybody</p>\n          </div>\n        </div>\n        <div className=\"about\">\n          <div className=\"about-text\">\n            <h2>About RiffTube</h2>\n            <p>\n              In the glorious tradition of Mystery Science Theater 3000, The\n              Film Crew, RiffTrax, Cinematic Titanic, MST3k again, and others...\n            </p>\n\n            <p>\n              Now presenting: <em>you!</em>\n            </p>\n            <p>\n              RiffTube allows you to add your own riffs to any video on YouTube.\n            </p>\n          </div>\n          {/* <div>\n            <img className=\"horror-movie-image\" src={HorrorMovie} />\n          </div> */}\n        </div>\n      </section>\n      <section className=\"bottom-part\">\n        <footer className=\"landing-footer\">\n          Copyright © 2020 - All rights reserved\n        </footer>\n      </section>\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import React from 'react';\n\nimport HorrorMovie from '../images/undraw_horror_movie_3988.svg';\nimport NavBar from './NavBar.js';\n\nfunction About() {\n  return (\n    <div className=\"landing-page\">\n      <NavBar color=\"white\" />\n      <section className=\"middle-part\" style={{ height: 'initial' }}>\n        <div className=\"middle-text\">\n          <h3>About RiffTube</h3>\n          <p>or: How I Learned to Stop Worrying and Love RiffTube</p>\n        </div>\n        <h2>Developers:</h2>\n        <div className=\"features\">\n          <div className=\"feature feature-one\" style={{ width: 'initial' }}>\n            <img src=\"/joss.jpg\" alt=\"Joss!\" style={{ borderRadius: '50%' }} />\n\n            <p>Joscelyn!</p>\n          </div>\n          <div className=\"feature feature-two\" style={{ width: 'initial' }}>\n            <img\n              src=\"/david.jpg\"\n              alt=\"David!\"\n              style={{ borderRadius: '50%' }}\n            />\n\n            <p>David!</p>\n          </div>\n        </div>\n        <div\n          className=\"about\"\n          style={{ backgroundColor: 'white', width: '100%', color: 'black' }}\n        >\n          <div className=\"about-text\">\n\n            <h2>Q&amp;A</h2>\n            <p>\n              Q: Just what is RiffTube?\n            </p>\n            <p>\n              A: RiffTube is a tool that allows you to add your voice to YouTube videos.\n              Riffs are saved remotely, so your riffs can be shared with the world!\n              <br />\n            </p>\n            <div style={ { height: \"1px\", background: \"gray\", width: \"75%\", margin: \"auto\" } } />\n            <p>\n              Q: How are you so smart that you came up with this and made it?\n            </p>\n            <p>\n              A: Years spent watching MST3k, and learning to code.\n              <br />\n            </p>\n            <div style={ { height: \"1px\", background: \"gray\", width: \"75%\", margin: \"auto\" } } />\n            <p>Q: How can I contact you with questions or issues?</p>\n            <p>\n              A: The best way to report technical issues is via the RiffTube\n              {' '}\n              <a href=\"https://github.com/JossWritesCode/RiffTube/issues\">\n                github repository\n              </a>\n              {' '}\n              <a href=\"https://github.com/JossWritesCode/RiffTube/issues\">\n                issue tracker\n              </a>\n              <br />\n              You can also email us:{' '}\n              <a href=\"mailto:grokprogramming@gmail.com\">\n                grokprogramming@gmail.com\n              </a>\n              .\n              <br />\n            </p>\n            <div style={ { height: \"1px\", background: \"gray\", width: \"75%\", margin: \"auto\" } } />\n            <p>Q: It's not working!</p>\n            <p>\n              A: If you have a Mac, check your Security &amp; Privacy settings in System Preferences.\n              You need to make sure that your browser has permission to access to microphone.\n              <br />\n              <br />\n              If that doesn't help, please email us or report the issue via github. Please include what kind of computer\n              you are using (Windows, Mac, Android, iOS, Linux, etc.), and what browser (Chrome, FireFox, Edge, etc).\n              <br />\n            </p>\n            <div style={ { height: \"1px\", background: \"gray\", width: \"75%\", margin: \"auto\" } } />\n            <p>Q: Why is Google sign in required?</p>\n            <p>\n              A: To identify specific users, and prevent abuse of the system. Your email address or other information\n              will never be shared without your concept.\n              <br />\n            </p>\n            <div style={ { height: \"1px\", background: \"gray\", width: \"75%\", margin: \"auto\" } } />\n            <p>Q: Do any YouTube videos not work?</p>\n            <p>\n              A: Unfortunately, yes. Only videos that allow embedding\n              currently work with RiffTube.\n              <br />\n            </p>\n            <div style={ { height: \"1px\", background: \"gray\", width: \"75%\", margin: \"auto\" } } />\n\n            <p>Q: Any plans?</p>\n            <p>\n              A: So many. All the plans. If you have a feature you'd like to see, please submit a request.\n              It might already be in the works!\n              <br />\n            </p>\n\n          </div>\n          <div>\n            <img\n              alt=\"people watching a movie\"\n              className=\"horror-movie-image\"\n              src={HorrorMovie}\n            />\n          </div>\n        </div>\n      </section>\n      <section className=\"bottom-part\">\n        <footer className=\"landing-footer\">\n          Copyright © 2020 - All rights reserved\n        </footer>\n      </section>\n    </div>\n  );\n}\n\nexport default About;\n","import React from 'react';\nimport EditInterface from './components/RiffControls/EditInterface';\nimport ViewInterface from './components/ViewInterface/ViewInterface';\nimport LandingPage from './components/LandingPage.js';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport About from './components/About';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"main-section\">\n            <Route exact path=\"/\" component={LandingPage} />\n            <Route exact path=\"/riff\" component={EditInterface} />\n            <Route exact path=\"/riff/:videoID\" component={EditInterface} />\n            <Route exact path=\"/about\" component={About} />\n            <Route exact path=\"/view/:videoID\" component={ViewInterface} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  SET_VIDEO_ID,\n  DELETE_RIFF,\n  SAVE_RIFF,\n  CREATE_TEMP_AUDIO_RIFF,\n  CREATE_TEMP_TEXT_RIFF,\n  SAVE_TEMP_AUDIO,\n  CANCEL_EDIT,\n  EDIT_RIFF,\n  LOAD_RIFF,\n  RIFF_LOADED,\n  RECEIVE_RIFF_LIST,\n  SAVE_RIFF_SUCCESS\n} from '../actions/index.js';\n\nlet initialState = {\n  all: [],\n  temp: null,\n  editIndex: null\n};\n\nconst riffsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CREATE_TEMP_AUDIO_RIFF:\n    case CREATE_TEMP_TEXT_RIFF:\n      return {\n        ...state,\n        temp: {\n          ...state.temp,\n          type: action.type === CREATE_TEMP_AUDIO_RIFF ? 'audio' : 'text',\n          // @ts-ignore\n          // rifftubePlayer isn't normally on the window object so this throws an error but it works.\n          time: window.rifftubePlayer.getCurrentTime(),\n          video_id: action.videoID,\n          tempId: new Date().getUTCMilliseconds() // used to get perm id from server\n        },\n        editIndex: null\n      };\n    case EDIT_RIFF:\n      return {\n        ...state,\n        temp: { ...state.all[action.payload] }, // copy specified riff to tempRiff\n        editIndex: action.payload\n      };\n    case DELETE_RIFF: {\n      let ret = { ...state };\n\n      ret.all = ret.all.filter( el => el.id !== action.id );\n\n      // silly change\n\n      /*let index = ret.all.findIndex(el => el.id === action.id);\n\n      console.log( \"delete riff reducer\", index );\n\n      console.log( ret );\n\n      ret.all.splice(index, 1);*/\n\n      return ret;\n    }\n    case SAVE_TEMP_AUDIO:\n      return {\n        ...state,\n        temp: {\n          ...state.temp,\n          duration: action.duration,\n          payload: action.payload\n        }\n      };\n    case CANCEL_EDIT:\n      return {\n        ...state,\n        temp: null,\n        editIndex: null\n      };\n    case RECEIVE_RIFF_LIST:\n      return {\n        ...state,\n        timestamp: action.payload.timestamp,\n        all:\n          action.payload.body.map(el => ({\n            ...el,\n            time: el.start_time,\n            payload: el.isText ? el.text : null,\n            type: el.isText ? 'text' : 'audio'\n          }))\n        /*[\n          ...state.all, // !!! this seems like it shouldn't be here (hence the change)\n          ...action.payload.body.map(el => ({\n            ...el,\n            time: el.start_time,\n            payload: el.isText ? el.text : null,\n            type: el.isText ? 'text' : 'audio'\n          }))\n        ]*/\n      };\n    case SAVE_RIFF_SUCCESS:\n      if (action.payload.type === 'add') {\n        let riffs = [...state.all];\n        riffs.forEach((el, ind, arr) => {\n          if (el.tempId === action.payload.tempId)\n            arr[ind] = { ...el, id: action.payload.id };\n          //el.id = action.payload.id;\n        });\n        let ret = { ...state, all: riffs };\n        return ret;\n      } else return state;\n    case SAVE_RIFF: {\n      let riff = { ...state.temp, ...action.payload };\n      let riffs;\n\n      // adding a new riff:\n      if (state.editIndex === null) riffs = [...state.all, riff];\n      // EDIT_MODE (existing riff):\n      else {\n        riffs = [...state.all];\n        riffs[state.editIndex] = riff;\n      }\n\n      return {\n        //        ...state, // not needed because the state is fully specified\n        all: riffs,\n        temp: null,\n        editIndex: null\n      };\n    }\n    case LOAD_RIFF:\n      let ret = { ...state }; // will this work?\n      ret.all[action.payload].loading = true;\n      return ret;\n    case RIFF_LOADED: {\n      debugger;\n      const b = new Blob(new Array(action.payload), { type: 'audio/mp3' });\n      let riffs = [...state.all];\n      riffs.forEach(el => {\n        if (el.id === action.id) {\n          el.payload = b;\n          el.loading = false;\n        }\n      });\n      let ret = { ...state, all: riffs };\n\n      // if this is being edited currently, tempRiff needs to be updated as well\n      // editIndex != null simply means that something is being edited\n      if (state.editIndex !== null && state.temp.id === action.id)\n        ret.temp = { ...ret.temp, payload: b };\n\n      return ret;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default riffsReducer;\n","import {\n    RECEIVE_RIFF_META\n  } from '../actions/index.js';\n  \n  let initialState = [];\n  \n  const riffsMetaReducer = (state = initialState, action) => {\n    switch (action.type) {\n      case RECEIVE_RIFF_META:\n        return action.payload.body.map(el => ({\n              ...el,\n              time: el.start_time,\n              payload: el.isText ? el.text : null,\n              type: el.isText ? 'text' : 'audio'\n            }));\n      default:\n        return state;\n    }\n  };\n  \n  export default riffsMetaReducer;\n  ","import {\n  SET_VIDEO_ID,\n  CREATE_TEMP_AUDIO_RIFF,\n  CREATE_TEMP_TEXT_RIFF,\n  EDIT_RIFF,\n  EDIT_MODE,\n  CANCEL_EDIT,\n  SAVE_RIFF,\n  SET_PLAYER_MODE,\n  PLAY_MODE,\n  PAUSE_MODE,\n  TOGGLE_PLAYER_MODE\n} from '../actions/index.js';\n\nconst modeReducer = (state = PAUSE_MODE, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return PAUSE_MODE;\n    case CREATE_TEMP_AUDIO_RIFF:\n    case CREATE_TEMP_TEXT_RIFF:\n    case EDIT_RIFF:\n      return EDIT_MODE;\n    case SET_PLAYER_MODE:\n      return action.payload;\n    case CANCEL_EDIT:\n      return PAUSE_MODE;\n    case TOGGLE_PLAYER_MODE: // not needed at the moment\n      return state.mode === PLAY_MODE ? PAUSE_MODE : PLAY_MODE;\n    case SAVE_RIFF:\n      return PLAY_MODE; // should be an option\n    default:\n      return state;\n  }\n};\n\nexport default modeReducer;","import {\n  GOOGLE_USER_SIGNIN\n} from '../actions/index.js';\n\nconst googleUserReducer = (state = null, action) => {\n  switch (action.type) {\n    case GOOGLE_USER_SIGNIN:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default googleUserReducer;","import {\n  SET_VIDEO_ID,\n  SET_RIFF_NOT_PLAYING,\n  SET_RIFF_PLAYING\n} from '../actions/index.js';\n\nconst riffsPlayingReducer = (state = {}, action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return {};\n    case SET_RIFF_PLAYING:\n    case SET_RIFF_NOT_PLAYING:\n      return {\n          ...state,\n          [action.payload]: action.type === SET_RIFF_PLAYING ? true : false\n        };\n    default:\n      return state;\n  }\n}\n\nexport default riffsPlayingReducer;","import {\n  RECEIVE_RIFF_LIST,\n  RECEIVE_NAME_UPDATE\n} from '../actions/index.js';\n\nconst nameReducer = (state = \"\", action) => {\n  switch (action.type) {\n    case RECEIVE_NAME_UPDATE:\n    case RECEIVE_RIFF_LIST:\n      return action.payload.name || \"\"; // hacky but added because no name is returned for view riffs\n    default:\n      return state;\n  }\n};\n\nexport default nameReducer;","import {\n  RECEIVE_RIFF_LIST\n} from '../actions/index.js';\n\nconst useridReducer = (state = null, action) => {\n  switch (action.type) {\n    case RECEIVE_RIFF_LIST:\n      return action.payload.user_id || 0; // hacky but added because no user-id is returned for view riffs\n    default:\n      return state;\n  }\n};\n\nexport default useridReducer;","import { SET_VIDEO_ID } from '../actions/index.js';\n\nconst videoIDReducer = (state = 'zZvmWtx_pfU', action) => {\n  switch (action.type) {\n    case SET_VIDEO_ID:\n      return action.payload;\n\n    default:\n      return state;\n  }\n};\n\nexport default videoIDReducer;\n","import { RECEIVE_RIFF_LIST, SAVE_RIFF_SUCCESS } from '../actions/index.js';\n\nconst videoDurationReducer = (state = null, action) => {\n  switch (action.type) {\n    case RECEIVE_RIFF_LIST:\n    case SAVE_RIFF_SUCCESS: // this needs testing\n      console.log( \"video duration reducer\", action);\n      if ( action.payload.duration )\n        return action.payload.duration;\n      // else\n      return state;\n    default:\n      return state;\n  }\n};\n\nexport default videoDurationReducer;\n","import {\n    WEB_SOCKET_UPDATE\n} from '../actions/index.js';\n  \n  const webSocketReducer = (state = null, action) => {\n    switch (action.type) {\n      case WEB_SOCKET_UPDATE:\n        return action.payload;\n      default:\n        return state;\n    }\n  };\n  \n  export default webSocketReducer;","import { combineReducers } from 'redux';\n\nimport riffsReducer from './riffs-reducer';\nimport riffsMetaReducer from './riffsMeta-reducer';\nimport modeReducer from './mode-reducer';\nimport googleUserReducer from './googleUser-reducer';\nimport riffsPlayingReducer from './riffsPlaying-reducer';\nimport nameReducer from './name-reducer';\nimport useridReducer from './userid-reducer'\nimport videoIDReducer from './videoID-reducer';\nimport videoDurationReducer from './videoDuration-reducer';\nimport webSocketReducer from './websocket-reducer';\n\nexport default combineReducers({\n  riffs: riffsReducer,\n  riffsMeta: riffsMetaReducer,\n  mode: modeReducer,\n  googleUser: googleUserReducer,\n  riffsPlaying: riffsPlayingReducer,\n  name: nameReducer,\n  user_id: useridReducer,\n  videoID: videoIDReducer,\n  duration: videoDurationReducer,\n  websocket: webSocketReducer\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport defaultReducer from './reducers';\n\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport './SCSS/main.scss';\nimport thunkMiddleware from 'redux-thunk';\n\nconst store = createStore(defaultReducer, applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/delete-24px.2fc9a828.svg\";","module.exports = __webpack_public_path__ + \"static/media/edit-24px.94f6e29d.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings_voice-24px.62e607b7.svg\";","module.exports = __webpack_public_path__ + \"static/media/chat-24px.190e0f49.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_movie_night_93wl.bd90a236.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_horror_movie_3988.a8de6ac3.svg\";"],"sourceRoot":""}